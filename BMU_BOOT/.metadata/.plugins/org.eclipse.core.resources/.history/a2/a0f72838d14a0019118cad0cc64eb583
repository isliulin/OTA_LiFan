
#include "MAIN.h"

/*SID SA服务*/
const	Struct_Uds_SID_SA	st_Uds_SID_SA[UDS_SID_SA_SUBFUNC_NUMBER] =
{
		{
			0x05U,									/*子功能号*/
			0x06U,
			0x00U,
			1U,										/*数据长度(不含SID)*/
			UdsFunc_SID_SA_SUBID_RSD4_Callback		/*回调函数*/
		},

		{
			0x06U,									/*子功能号*/
			0x06U,
			0x00U,
			5U,										/*数据长度(不含SID)*/
			UdsFunc_SID_SA_SUBID_SK4_Callback		/*回调函数*/
		},
};

/*************************************************************************/
/*
Function:		void UdsFunc_SID_SA_Analysis(uint8 *ui8_pInd, uint16 ui16_IndLen)

Description: 	此函数用于解析SID_SA服务

Parameters: 	ui8_pInd(不含SID)
				ui16_IndLen(不含SID)

Return:       	void

Return Values:  无

Remarks:

Example:
*/
void UdsFunc_SID_SA_Analysis(uint8 *ui8_pInd, uint16 ui16_IndLen)
{
	uint8	ui8_Loop_1;	/*循环计数器*/
	uint8	ui8_SubID;	/*子功能号*/

	ui8_SubID = ui8_pInd[0U] & 0x7FU;	/*取子功能号*/

	/*查询匹配子功能号*/
	for(ui8_Loop_1 = 0U; ui8_Loop_1 < UDS_SID_SA_SUBFUNC_NUMBER; ui8_Loop_1++)
	{
		if((ui8_SubID & 0x7FU) == st_Uds_SID_SA[ui8_Loop_1].ui8_SubID)
		{
			break;
		}
	}

	if(ui8_Loop_1 < UDS_SID_SA_SUBFUNC_NUMBER)	/*查到符合的子功能号*/
	{
//		/*判断Session是否支持*/
//		if((st_Uds_SID_DSC_Info.ui8_Active_Session & st_Uds_SID_SA[ui8_Loop_1].ui8_Session_Support) != 0U)
//		{
			/*判断服务无需密钥，或密钥已解锁*/
			if(((st_Uds_SID_SA[ui8_Loop_1].b_Security_En & st_Uds_SID_SA_Info.b_Security_Locked) != 0U) || (st_Uds_SID_SA[ui8_Loop_1].b_Security_En == 0U))
			{
				if(st_Uds_SID_SA_Info.ui32_Boot_State255_Delay != 0)
				{
					st_Uds_SID_SA_Info.ui32_Boot_State255_Delay--;
					st_Uds_Response.ui8_ResCode = UDS_RES_CODE_RTDNE;	/*requiredTimeDelayNotExpired*/
				}
				else
				{
					if(ui16_IndLen == st_Uds_SID_SA[ui8_Loop_1].ui16_DataLen)	/*判断长度*/
					{
						st_Uds_Dcm_Info.ui8_Cur_Task = UDS_TASK_SID_SA;	/*当前为SecurityAccess任务*/
					}
					else
					{
						st_Uds_Response.ui8_ResCode = UDS_RES_CODE_IMLOIF;	/*数据长度错误响应*/
					}
				}
			}
			else
			{
				st_Uds_Response.ui8_ResCode = UDS_RES_CODE_SAD;	/*服务密钥未解锁响应*/
			}
//		}
//		else
//		{
//			st_Uds_Response.ui8_ResCode = UDS_RES_CODE_SNSIAS;	/*服务在工作Session下不支持响应*/
//		}
	}
	else
	{
		st_Uds_Response.ui8_ResCode = UDS_RES_CODE_SFNS;	/*子功能不支持响应*/
	}

}

/*************************************************************************/
/*
Function:		boolean UdsFunc_SID_SA_Appl_Deal
				(uint8 *ui8_pInd, uint8 *ui8_pRes, uint16 *ui16_pResLen)

Description: 	此函数用于处理SID_SA应用层任务

Parameters: 	ui8_pInd(不含SID)
				ui8_pRes(不含SID)
				ui16_pResLen

Return:       	boolean

Return Values:  E_OK		任务完成
				E_NOT_OK	任务未完成

Remarks:

Example:
*/
boolean UdsFunc_SID_SA_Appl_Deal(uint8 *ui8_pInd, uint8 *ui8_pRes, uint16 *ui16_pResLen)
{
	uint8	ui8_Loop_1;	/*循环计数器*/
	uint8	ui8_SubID;	/*子功能号*/
	boolean	b_Return;


	if((ui8_pInd[0U] & 0x80U) != 0U)	/*抑制位为TRUE*/
	{
		st_Uds_Response.b_SuppressPosRspBit = TRUE;	/*抑制正回应位赋TRUE*/
	}

	ui8_SubID = ui8_pInd[0U] & 0x7FU;	/*取子功能号*/

	/*查询匹配子功能号*/
	for(ui8_Loop_1 = 0U; ui8_Loop_1 < UDS_SID_SA_SUBFUNC_NUMBER; ui8_Loop_1++)
	{
		if(ui8_SubID == st_Uds_SID_SA[ui8_Loop_1].ui8_SubID)
		{
			break;
		}
	}

	if(ui8_Loop_1 < UDS_SID_SA_SUBFUNC_NUMBER)	/*查到符合的子功能号*/
	{

		b_Return = st_Uds_SID_SA[ui8_Loop_1].pFunc(&ui8_pInd[1U], &ui8_pRes[1U], &ui16_pResLen[0U]);	/*执行子功能任务*/

		if(st_Uds_Response.ui8_ResCode == UDS_RES_CODE_PR)	/*判断是否正响应*/
		{
			if(st_Uds_SID_SA_Info.SA_Counter != 0U)
			{
				st_Uds_SID_SA_Info.SA_Counter--;
				st_Uds_SID_SA_Info.SeedKeyFlag = 0;
			}
			ui8_pRes[0U] = ui8_SubID;	/*回应子功能号*/
			ui16_pResLen[0U] += 1U;		/*增加SubID字节长度*/
		}
		else												/*负响应*/
		{
			if(st_Uds_SID_SA_Info.SA_Counter < 3U)
			{
				st_Uds_SID_SA_Info.SA_Counter++;
			}

			if(st_Uds_SID_SA_Info.SA_Counter == 3U)
			{
				st_Uds_SID_SA_Info.SeedKeyFlag = 1;
				st_Uds_SID_SA_Info.ui32_Boot_State255_Delay = UDS_BOOT_STATE_DELAY_TIME;	/*初始化Boot State255等待时间*/
			}
		}

	}
	else
	{
		st_Uds_Response.ui8_ResCode = UDS_RES_CODE_SFNS;	/*子功能不支持响应*/
		b_Return = E_OK;
	}

	return b_Return;
}
