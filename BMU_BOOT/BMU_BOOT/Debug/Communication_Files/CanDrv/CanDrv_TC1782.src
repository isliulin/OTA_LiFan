	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v4.3r1 Build 759 SN 00641831"
	.compiler_invocation	"ctc -f cc2424a -c99 --dep-file=Communication_Files\\CanDrv\\.CanDrv_TC1782.o.d -D__CPU__=tc1782 -D__CPU_TC1782__ --core=tc1.3.1 -F -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\CanDrv -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Com -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Com\\Can_Input -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Com\\Can_Output -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Uds\\Dcm -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Uds\\Dem -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Uds\\Tp -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\Uds\\User -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Complex_Files -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Initiate_Files -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Nvm_Files\\FlsDrv -ID:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Stand_Header -g2 --make-target=Communication_Files\\CanDrv\\CanDrv_TC1782.o -t4 --language=-gcc,-volatile,+strings --default-near-size=0 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto -o Communication_Files\\CanDrv\\CanDrv_TC1782.src ..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c"
	.compiler_name		"ctc"
	.name	"CanDrv_TC1782"

	
$TC131
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Init',code,cluster('CAN_Init')
	.sect	'.text.CanDrv_TC1782.CAN_Init'
	.align	2
	
	.global	CAN_Init

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     1  /*----------------------------------------------------------------------------------------------------*/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     2  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     3  File Name：  	CanDrv_TC1782.c
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     4  Author：        	任智强
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     5  Version：      	V1.00.0007
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     6  Comment：  	CAN驱动
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     7  			MISRA_2004去除:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     8  			R1.1：     不允许C语言扩展；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	     9  			R2.2：     不允许使用”//“；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    10  			R5.1：     不允许使用超过31个字符；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    11  			R7.1：     不能使用8进制数；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    12  			R10.1：	整型数值不应隐式转换；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    13  			R10.3：	强制转换到更窄的类型；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    14  			R10.5：	位运算符强制转换；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    15  			R10.6：   需要定义数值后加”U“；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    16  			R12.2：	表达值不同；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    17  			R12.7：	不能使用无符号型；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    18  			R14.3：	在预处理之前，空语句只能出现在一行上；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    19  			R14.8：   应该是复合语句
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    20  			R17.4：	数组的索引；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    21  			R19.4：   宏定义相关；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    22  			R19.10： 宏定义相关；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    23  			R20.1：   需保留关键字（头文件防止重复调用问题）；
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    24  History：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    25  			V1.00.0000		20140509	初始版本
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    26  			v1.00.0001		20140611	增加BUSOFF功能，增加CAN ID设置，增加CAN MASK屏蔽
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    27  			v1.00.0002		20140612	CAN_Read()增加CAN ID参数返回
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    28  			v1.00.0003		20140618	增加BusOff快速，慢速恢复功能
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    29  			V1.00.0004		20140621	修改接口函数注释
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    30  			V1.00.0005		20140624	调整BusOff恢复时间
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    31  			V1.00.0006		20140713	增加CAN接收发送中断配置，增加通过ID号读取数据函数
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    32  			V1.00.0007		20150427	修改CAN报文优选级
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    33  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    34  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    35  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    36  #include "MAIN.h"
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    37  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    38  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    39  //CAN故障
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    40  Struct_CAN_Error	st_CAN_Error[MAX_NODE_NUM];
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    41  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    42  uint32	ui32_BOFF_Delay_Count[MAX_NODE_NUM];	//BUSOFF Delay计数器
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    43  uint32	ui32_BOFF_Clear_Count[MAX_NODE_NUM];	//BUSOFF清除计数器
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    44  uint8	ui8_CallCycle_Count[MAX_OBJECT_NUM];	//收发周期计数器
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    45  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    46  uint32	ui32_MSIMASK_Value[4U];	//MSIMASK寄存器值
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    47  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    48  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    49  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    50  Function:		void CAN_Init(void)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    51  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    52  Description: 	此函数用于CAN初始化
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    53  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    54  Parameters: 	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    55  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    56  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    57  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    58  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    59  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    60  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    61  				用户在系统初始化时调用此函数初始化CAN模块。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    62  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    63  Example:		初始化CAN模块
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    64  				CAN_Init();
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    65  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    66  void CAN_Init(void)
; Function CAN_Init
.L140:
CAN_Init:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    67  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    68  	volatile uint32	ui32_Temp;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    69  	volatile uint8	ui8_Node_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    70  	volatile uint8	ui8_MO_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    71  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    72  	MAIN_vResetENDINIT();
	lea	a15,0xf00005f0
	ld.w	d15,[a15]
.L425:
	insert	d4,d15,#0,#0,#1
	sub.a	a10,#8
.L368:
	call	MAIN_vWriteWDTCON0
.L2:
	ld.bu	d15,0xf00005f0
	jnz.t	d15:0,.L2				; predicted taken
.L426:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    73  	CAN_CLC        =  0x00000000;  // 使能CAN模块
	mov	d8,#0
	movh.a	a2,#61440
	lea	a2,[a2]@los(0xf0004000)
.L427:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    74  	ui32_Temp      =  CAN_CLC;     // 虚拟读一次避免管道效应
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    75  	while((CAN_CLC & 0x00000002 )== 0x00000002)
	mov	d9,#2
	st.w	[a2],d8
.L428:
	ld.w	d15,[a2]
.L429:
	st.w	[a10],d15
.L430:
	j	.L3
.L4:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    76  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    77  		__nop();  					//等待直到模块使能
	nop
.L3:
	ld.w	d15,[a2]
.L431:
	jnz.t	d15:1,.L4				; predicted taken
.L432:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    78  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    79  	CAN_FDR        =  0x000043FF;  // 选择normal分频
	movh.a	a2,#61440
.L433:
	mov	d15,#17407
	st.w	[a2]@los(0xf000400c),d15
.L434:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    80  	ui32_Temp      =  CAN_FDR;     // 虚拟读一次避免管道效应
	ld.w	d15,[a2]@los(0xf000400c)
.L435:
	st.w	[a10],d15
.L436:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    81  	MAIN_vSetENDINIT();
	ld.w	d15,[a15]
	or	d4,d15,#1
	call	MAIN_vWriteWDTCON0
.L437:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    82  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    83  	while(CAN_PANCTR & CAN_PANCTR_BUSY)
	movh.a	a13,#61440
	lea	a13,[a13]@los(0xf00041c4)
.L438:
	j	.L5
.L6:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    84  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    85  		__nop();					//等待Panel完成初始化
	nop
.L5:
	ld.w	d15,[a13]
.L439:
	jnz.t	d15:8,.L6				; predicted taken
.L440:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    86  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    87  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    88  	CAN_MCR        =  0x00000000;
	movh.a	a15,#61440
.L441:
	st.w	[a15]@los(0xf00041c8),d8
.L442:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    89  	CAN_MCR        =  0x00000000;
	st.w	[a15]@los(0xf00041c8),d8
.L443:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    90  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    91  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    92  	//配置Node
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    93  	for(ui8_Node_Loop = 0U; ui8_Node_Loop < MAX_NODE_NUM; ui8_Node_Loop++)
	mov	d10,#0
	st.b	[a10]4,d10
.L444:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    94  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    95  		if(st_CAN_Node[ui8_Node_Loop].b_Enable == TRUE)	//判断Node是否使能
	movh.a	a12,#@his(st_CAN_Node)
	lea	a12,[a12]@los(st_CAN_Node)
.L445:
	mov.a	a14,#2
.L8:
	ld.bu	d15,[a10]4
.L446:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L447:
	ld.bu	d0,[a15]
.L448:
	jne	d0,#1,.L9				; predicted taken
.L449:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    96  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    97  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    98  			REG_CAN_NCR(ui8_Node_Loop) =  0x00000049;  	//CAN_NCR 置位INIT，CCE,ALIE
	ld.bu	d15,[a10]4
	sh	d0,d15,#8
	mov	d15,#16896
	addih	d15,d15,#61440
	add	d0,d15
.L450:
	mov.a	a15,d0
.L451:
	mov	d15,#73
	st.w	[a15],d15
.L452:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	    99  			REG_CAN_NIPR(ui8_Node_Loop) =  0x00000002;  //CAN_NIPR SRN 2
	mov	d0,#16904
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L453:
	mov.a	a15,d15
.L454:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   100  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   101  			REG_CAN_NECNT(ui8_Node_Loop) =  0x00600000; //CAN_NECNT warning threshold value 96
	mov	d0,#16916
	st.w	[a15],d9
.L455:
	addih	d0,d0,#61440
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	add	d15,d0
.L456:
	mov.a	a15,d15
.L457:
	movh	d15,#96
	st.w	[a15],d15
.L458:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   102  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   103  			switch(ui8_Node_Loop)	//配置CAN收发管脚
	ld.bu	d15,[a10]4
.L459:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   104  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   105  				case NODE_0:
	jeq	d15,#0,.L10				; prediction unknown
.L460:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   106  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   107  					REG_CAN_NPCR(ui8_Node_Loop) =  0x00000000;  //CAN_NPCR
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   108  					P3_IOCR12      = (P3_IOCR12 & ~0x000000F0) | 0x00000020; //P3.12管脚作为输入
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   109  					P3_IOCR12      = (P3_IOCR12 & ~0x0000F000) | 0x00009000; //P3.13管脚作为输出
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   110  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   111  					RESETIO_P1_13;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   112  					break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   113  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   114  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   115  				case NODE_1:
	jeq	d15,#1,.L11				; prediction unknown
.L461:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   116  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   117  					REG_CAN_NPCR(ui8_Node_Loop) =  0x00000000;  //CAN_NPCR
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   118  					P3_IOCR12      = (P3_IOCR12 & ~0x00F00000) | 0x00200000; //P3.14作为输入
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   119  					P3_IOCR12      = (P3_IOCR12 & ~0xF0000000) | 0x90000000; //P3.15作为输出
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   120  					break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   121  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   122  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   123  				case NODE_2:
	jeq	d15,#2,.L12				; prediction unknown
.L462:
	j	.L13
.L10:
	mov	d0,#16908
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L463:
	mov.a	a15,d15
	st.w	[a15],d8
.L464:
	lea	a15,0xf0000f1c
	ld.w	d15,[a15]
.L465:
	insert	d15,d15,#2,#4,#4
	st.w	[a15],d15
.L466:
	ld.w	d15,[a15]
.L467:
	insert	d15,d15,#9,#12,#4
	st.w	[a15],d15
.L468:
	movh	d15,#8192
	st.w	0xf0000d04,d15
.L469:
	j	.L14
.L11:
	mov	d0,#16908
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L470:
	mov.a	a15,d15
	st.w	[a15],d8
.L471:
	lea	a15,0xf0000f1c
	ld.w	d15,[a15]
.L472:
	insert	d15,d15,#2,#20,#4
	st.w	[a15],d15
.L473:
	movh	d0,#36864
	ld.w	d15,[a15]
.L474:
	insert	d15,d15,#0,#28,#4
.L475:
	or	d15,d0
.L476:
	j	.L15
.L12:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   124  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   125  					REG_CAN_NPCR(ui8_Node_Loop) =  0x00000002;  //CAN_NPCR
	mov	d0,#16908
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L477:
	mov.a	a15,d15
	st.w	[a15],d9
.L478:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   126  					P4_IOCR0       = (P4_IOCR0 & ~0x000000F0) | 0x00000020; //P4.0作为输入
	lea	a15,0xf0001010
	ld.w	d15,[a15]
.L479:
	insert	d15,d15,#2,#4,#4
	st.w	[a15],d15
.L480:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   127  					P4_IOCR0       = (P4_IOCR0 & ~0x0000F000) | 0x0000B000; //P4.1作为输出
	ld.w	d15,[a15]
.L481:
	insert	d15,d15,#11,#12,#4

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   128  					break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   129  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   130  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   131  				default:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   132  					break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   133  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   134  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   135  			/*更改波特率*/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   136  			  switch(Boot_Flag[1])
.L15:
	st.w	[a15],d15
.L14:
.L13:
	movh.a	a15,#@his(Boot_Flag)
	lea	a15,[a15]@los(Boot_Flag)
.L482:
	ld.bu	d15,[a15]1
.L483:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   137  			  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   138  			  case 0x01:	/*500K*/
	jeq	d15,#1,.L20				; prediction unknown
.L484:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   139  				  st_CAN_Node[ui8_Node_Loop].ui32_BaudRate      =  500000U;  // load  node 0 bit timing register
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   140  				  break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   141  			  case 0x02:	/*250K*/
	jeq	d15,#2,.L17				; prediction unknown
.L485:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   142  				  st_CAN_Node[ui8_Node_Loop].ui32_BaudRate      =  250000U;  // load  node 0 bit timing register
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   143  				  break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   144  			  case 0x03:	/*125K*/
	jeq	d15,#3,.L18				; prediction unknown
.L486:
	j	.L19
.L17:
	ld.bu	d15,[a10]4
.L487:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L488:
	mov	d15,#15625
	sh	d15,#4
.L489:
	j	.L21
.L18:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   145  				  st_CAN_Node[ui8_Node_Loop].ui32_BaudRate      =  125000U;  // load  node 0 bit timing register
	ld.bu	d15,[a10]4
.L490:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L491:
	mov	d15,#15625
	sh	d15,#3
.L492:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   146  				  break;
	j	.L22

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   147  			  default:
.L19:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   148  				  st_CAN_Node[ui8_Node_Loop].ui32_BaudRate      =  500000U;  // load  node 0 bit timing register
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   149  				  break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   150  			  }
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   151  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   152  			//配置波特率
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   153  			ui32_Temp = (st_CAN_Node[ui8_Node_Loop].ui32_CAN_Clock / st_CAN_Node[ui8_Node_Loop].ui32_BaudRate
.L20:
	ld.bu	d15,[a10]4
.L493:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L494:
	mov	d15,#15625
	sh	d15,#5
.L21:
.L22:
	st.w	[+a15]6,d15
.L495:
	ld.bu	d15,[a10]4
.L496:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L497:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   154  					/ (st_CAN_Node[ui8_Node_Loop].ui8_TSEG1 + st_CAN_Node[ui8_Node_Loop].ui8_TSEG2 + 1U)) - 1U;
	ld.bu	d15,[a10]4
.L498:
	mul	d15,d15,#20
	ld.w	d5,[a15]6
.L499:
	addsc.a	a15,a12,d15,#0
.L500:
	ld.bu	d15,[a10]4
.L501:
	mul	d15,d15,#20
	ld.bu	d0,[a15]11
.L502:
	addsc.a	a15,a12,d15,#0
.L503:
	ld.bu	d15,[a15]10
.L504:
	add	d15,d0
.L505:
	add	d11,d15,#1
	ld.bu	d15,[a10]4
.L506:
	mul	d15,d15,#20
	addsc.a	a15,a12,d15,#0
.L507:
	ld.w	d4,[a15]2
.L508:
	call	__rt_udivmod
.L509:
	mov	d4,d2
	mov	d5,d11
	call	__rt_udivmod
.L510:
	add	d2,#-1
	st.w	[a10],d2
.L511:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   155  			ui32_Temp += (uint32)(st_CAN_Node[ui8_Node_Loop].ui8_SJW - 1U) << 6U;
	ld.bu	d15,[a10]4
.L512:
	mul	d15,d15,#20
	ld.w	d0,[a10]
.L513:
	addsc.a	a15,a12,d15,#0
.L514:
	ld.bu	d15,[a15]12
.L515:
	add	d15,#-1
.L516:
	sh	d15,#6
.L517:
	add	d0,d15
	st.w	[a10],d0
.L518:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   156  			ui32_Temp += (uint32)((uint8)(st_CAN_Node[ui8_Node_Loop].ui8_TSEG1 - 1U)) << 8U;
	ld.bu	d15,[a10]4
.L519:
	mul	d15,d15,#20
	ld.w	d0,[a10]
.L520:
	addsc.a	a15,a12,d15,#0
.L521:
	ld.bu	d15,[a15]10
.L522:
	add	d15,#-1
.L523:
	extr.u	d15,d15,#0,#8
.L524:
	sh	d15,d15,#8
.L525:
	add	d0,d15
	st.w	[a10],d0
.L526:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   157  			ui32_Temp += (uint32)((uint8)(st_CAN_Node[ui8_Node_Loop].ui8_TSEG2 - 1U)) << 12U;
	ld.bu	d15,[a10]4
.L527:
	mul	d15,d15,#20
	ld.w	d0,[a10]
.L528:
	addsc.a	a15,a12,d15,#0
.L529:
	ld.bu	d15,[a15]11
.L530:
	add	d15,#-1
.L531:
	extr.u	d15,d15,#0,#8
.L532:
	sh	d15,d15,#12
.L533:
	add	d0,d15
	st.w	[a10],d0
.L534:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   158  			REG_CAN_NBTR(ui8_Node_Loop) =  ui32_Temp;  //CAN_NBTR
	mov	d0,#16912
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L535:
	mov.a	a15,d15
.L536:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   159  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   160  			REG_CAN_NFCR(ui8_Node_Loop) =  0x00000000; //CAN_NFCR
	mov	d0,#16920
	ld.w	d15,[a10]
.L537:
	st.w	[a15],d15
.L538:
	addih	d0,d0,#61440
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	add	d15,d0
.L539:
	mov.a	a15,d15
	st.w	[a15],d8
.L9:
	ld.bu	d15,[a10]4
.L540:
	add	d15,#1
	st.b	[a10]4,d15
.L541:
	loop	a14,.L8				; predicted taken
.L542:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   161  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   162  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   163  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   164  	//配置MO
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   165  	ui32_MSIMASK_Value[0U] = 0U;
	mov	d1,#0
	movh.a	a4,#@his(ui32_MSIMASK_Value)
	lea	a4,[a4]@los(ui32_MSIMASK_Value)
.L543:
	st.w	[a4],d1
.L544:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   166  	ui32_MSIMASK_Value[1U] = 0U;
	lea	a15,[a4]4
	st.w	[a15+],d1
.L545:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   167  	ui32_MSIMASK_Value[2U] = 0U;
	st.w	[a15+],d1
.L546:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   168  	ui32_MSIMASK_Value[3U] = 0U;
	st.w	[a15+],d1
.L547:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   169  	for(ui8_MO_Loop = 0U; ui8_MO_Loop < MAX_OBJECT_NUM; ui8_MO_Loop++)
	st.b	[a10]5,d10
.L548:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   170  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   171  		if(st_CAN_Object[ui8_MO_Loop].b_Enable == TRUE)	//判断MO是否使能
	movh.a	a2,#@his(st_CAN_Object)
	lea	a2,[a2]@los(st_CAN_Object)
.L549:
	lea	a5,127
.L24:
	ld.bu	d15,[a10]5
.L550:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L551:
	ld.bu	d15,[a15]
.L552:
	jne	d15,#1,.L25				; predicted not taken
.L553:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   172  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   173  			ui32_Temp = (uint32)((uint8)(st_CAN_Object[ui8_MO_Loop].ui8_Node + 1U) )* 0x100U * 0x100U * 0x100U;
	ld.bu	d15,[a10]5
.L554:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L555:
	ld.bu	d15,[a15]1
.L556:
	add	d15,#1
.L557:
	extr.u	d15,d15,#0,#8
.L558:
	sh	d15,d15,#24
	st.w	[a10],d15
.L559:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   174  			ui32_Temp += (uint32)ui8_MO_Loop * 0x100U * 0x100U;
	ld.bu	d15,[a10]5
.L560:
	sh	d15,d15,#16
	ld.w	d0,[a10]
.L561:
	add	d0,d15
	st.w	[a10],d0
.L562:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   175  			ui32_Temp += 0x02;
	ld.w	d15,[a10]
.L563:
	add	d15,#2
	st.w	[a10],d15
.L564:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   176  			SetListCommand(ui32_Temp);  //分配MO到相应Node
	ld.w	d15,[a10]
	st.w	[a13],d15
.L26:
	ld.w	d15,[a13]
	jnz.t	d15:8,.L26				; predicted taken
.L565:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   177  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   178  			if(st_CAN_Object[ui8_MO_Loop].b_Dir == CAN_RX_DIR)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   179  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   180  				REG_CAN_MOCTR(ui8_MO_Loop) =  0x00A00000;  //CAN_MOCTR
	mov	d2,#20508
.L566:
	addih	d2,d2,#61440
	ld.bu	d15,[a10]5
.L567:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L568:
	ld.bu	d15,[a15]2
.L569:
	jne	d15,#0,.L27				; predicted taken
.L570:
	ld.bu	d15,[a10]5
	sh	d0,d15,#5
	add	d0,d2
.L571:
	mov.a	a15,d0
.L572:
	movh	d0,#160
	st.w	[a15],d0
	j	.L28
.L27:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   181  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   182  			else if(st_CAN_Object[ui8_MO_Loop].b_Dir == CAN_TX_DIR)
	ld.bu	d15,[a10]5
.L573:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L574:
	ld.bu	d15,[a15]2
.L575:
	jne	d15,#1,.L29				; predicted not taken
.L576:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   183  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   184  				REG_CAN_MOCTR(ui8_MO_Loop) =  0x0EA80000;  //CAN_MOCTR
	ld.bu	d15,[a10]5
	sh	d0,d15,#5
	add	d0,d2
.L577:
	mov.a	a15,d0
.L578:
	movh	d15,#3752
	st.w	[a15],d15
	j	.L30
.L29:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   185  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   186  			else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   187  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   188  				__nop();
	nop
.L30:
.L28:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   189  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   190  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   191  			if(st_CAN_Object[ui8_MO_Loop].ui8_DLC <= 8U)
	ld.bu	d15,[a10]5
.L579:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L580:
	ld.bu	d15,[a15]5
.L581:
	jge.u	d15,#9,.L31				; predicted not taken
.L582:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   192  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   193  				REG_CAN_MOFCR(ui8_MO_Loop) = (uint32)((uint8)st_CAN_Object[ui8_MO_Loop].ui8_DLC )<< 24U;
	mov	d3,#20480
	ld.bu	d15,[a10]5
.L583:
	sh	d0,d15,#5
	ld.bu	d15,[a10]5
.L584:
	addih	d3,d3,#61440
.L585:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L586:
	add	d0,d3
	ld.bu	d15,[a15]5
.L587:
	mov.a	a6,d0
.L588:
	sh	d0,d15,#24
	st.w	[a6],d0
.L589:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   194  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   195  				if(st_CAN_Object[ui8_MO_Loop].b_RxIRQ == TRUE)	//接收中断使能
	ld.bu	d15,[a10]5
.L590:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L591:
	ld.bu	d15,[a15]3
.L592:
	jne	d15,#1,.L32				; predicted taken
.L593:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   196  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   197  					REG_CAN_MOFCR(ui8_MO_Loop) |= 0x10000U;
	ld.bu	d15,[a10]5
	sh	d15,#5
	add	d15,d3
.L594:
	mov.a	a15,d15
	ld.w	d15,[a15]
	insert	d15,d15,#1,#16,#1
	st.w	[a15],d15
.L595:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   198  					ui32_MSIMASK_Value[ui8_MO_Loop / 32U] |= 1 << (ui8_MO_Loop & 0x1FU);
	ld.bu	d15,[a10]5
	sh	d15,#-5
.L596:
	addsc.a	a15,a4,d15,#2
.L597:
	mov	d4,#1
	ld.bu	d15,[a10]5
.L598:
	and	d15,#31
	ld.w	d0,[a15]
.L599:
	sha	d4,d4,d15
.L600:
	or	d0,d4
	st.w	[a15],d0
.L32:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   199  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   200  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   201  				if(st_CAN_Object[ui8_MO_Loop].b_TxIRQ == TRUE)	//发送中断使能
	ld.bu	d15,[a10]5
.L601:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L602:
	ld.bu	d15,[a15]4
.L603:
	jne	d15,#1,.L33				; predicted taken
.L604:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   202  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   203  					REG_CAN_MOFCR(ui8_MO_Loop) |= 0x20000U;
	ld.bu	d15,[a10]5
	sh	d15,#5
	add	d3,d15
.L605:
	mov.a	a15,d3
	ld.w	d15,[a15]
	insert	d15,d15,#1,#17,#1
	st.w	[a15],d15
.L606:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   204  					ui32_MSIMASK_Value[ui8_MO_Loop / 32U] |= 1 << (ui8_MO_Loop & 0x1FU);
	ld.bu	d15,[a10]5
	sh	d15,#-5
.L607:
	addsc.a	a15,a4,d15,#2
.L608:
	mov	d3,#1
	ld.bu	d15,[a10]5
.L609:
	and	d15,#31
	ld.w	d0,[a15]
.L610:
	sha	d3,d3,d15
.L611:
	or	d0,d3
	st.w	[a15],d0
.L33:
.L31:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   205  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   206  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   207  			REG_CAN_MOFGPR(ui8_MO_Loop) =  0x00000000; //CAN_MOFGPR
	mov	d0,#20484
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L612:
	mov.a	a15,d15
	st.w	[a15],d8
.L613:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   208  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   209  			if(st_CAN_Object[ui8_MO_Loop].b_IDE == CAN_STD_ID)	//11位CAN ID
	ld.bu	d15,[a10]5
.L614:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L615:
	ld.bu	d15,[a15]6
.L616:
	jne	d15,#0,.L34				; predicted taken
.L617:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   210  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   211  				REG_CAN_MOAMR(ui8_MO_Loop) =  ((uint32)st_CAN_Object[ui8_MO_Loop].ui32_Mask << 18U) | 0x20000000;  //CAN_MOAMR
	mov	d0,#20492
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L618:
	mov.a	a6,d15
.L619:
	ld.bu	d15,[a10]5
.L620:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L621:
	ld.w	d15,[a15]12
.L622:
	sh	d15,d15,#18
.L623:
	insert	d15,d15,#1,#29,#1
	st.w	[a6],d15
.L624:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   212  				REG_CAN_MOAR(ui8_MO_Loop) =  ((uint32)st_CAN_Object[ui8_MO_Loop].ui32_ID << 18U) | 0x40000000;  //CAN_MOAR
	mov	d0,#20504
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L625:
	mov.a	a6,d15
.L626:
	ld.bu	d15,[a10]5
.L627:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L628:
	ld.w	d15,[a15]8
.L629:
	sh	d15,d15,#18
.L630:
	insert	d15,d15,#1,#30,#1
	st.w	[a6],d15
.L631:
	j	.L35
.L34:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   213  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   214  			else if(st_CAN_Object[ui8_MO_Loop].b_IDE == CAN_EXT_ID)	//29位CAN ID
	ld.bu	d15,[a10]5
.L632:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L633:
	ld.bu	d15,[a15]6
.L634:
	jne	d15,#1,.L36				; predicted not taken
.L635:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   215  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   216  				REG_CAN_MOAMR(ui8_MO_Loop) =  (uint32)st_CAN_Object[ui8_MO_Loop].ui32_Mask | 0x20000000;  //CAN_MOAMR
	mov	d0,#20492
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L636:
	mov.a	a6,d15
.L637:
	ld.bu	d15,[a10]5
.L638:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L639:
	ld.w	d15,[a15]12
.L640:
	insert	d15,d15,#1,#29,#1
	st.w	[a6],d15
.L641:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   217  				REG_CAN_MOAR(ui8_MO_Loop) =  (uint32)st_CAN_Object[ui8_MO_Loop].ui32_ID | 0xA0000000;  //CAN_MOAR
	mov	d0,#20504
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L642:
	mov.a	a6,d15
.L643:
	ld.bu	d15,[a10]5
.L644:
	mul	d15,d15,#20
	addsc.a	a15,a2,d15,#0
.L645:
	movh	d0,#40960
	ld.w	d15,[a15]8
.L646:
	or	d15,d0
	st.w	[a6],d15
.L647:
	j	.L37
.L36:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   218  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   219  			else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   220  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   221  				__nop();
	nop
.L37:
.L35:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   222  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   223  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   224  			ui32_Temp = (((uint32)ui8_MO_Loop) / 32U) << 13U;
	ld.bu	d15,[a10]5
.L648:
	sh	d15,#-5
.L649:
	sh	d15,d15,#13
	st.w	[a10],d15
.L650:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   225  			ui32_Temp += ((uint32)ui8_MO_Loop & 0x1FU) << 8U;
	ld.bu	d15,[a10]5
.L651:
	and	d15,#31
	ld.w	d0,[a10]
.L652:
	sh	d15,d15,#8
.L653:
	add	d0,d15
	st.w	[a10],d0
.L654:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   226  			REG_CAN_MOIPR(ui8_MO_Loop) =  ui32_Temp | 0x10U;  //CAN_MOIPR 接收中断分配在INT0，发送中断分配在INT1
	mov	d0,#20488
	ld.bu	d15,[a10]5
	sh	d15,#5
	addih	d0,d0,#61440
	add	d15,d0
.L655:
	mov.a	a15,d15
.L656:
	ld.w	d15,[a10]
.L657:
	or	d15,#16
	st.w	[a15],d15
.L658:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   227  			REG_CAN_MOCTR(ui8_MO_Loop) =  0x00200000; //CAN_MOCTR set MSGVAL
	ld.bu	d15,[a10]5
	sh	d15,#5
	add	d2,d15
.L659:
	mov.a	a15,d2
.L660:
	movh	d15,#32
	st.w	[a15],d15
.L25:
	ld.bu	d15,[a10]5
.L661:
	add	d15,#1
	st.b	[a10]5,d15
.L662:
	loop	a5,.L24				; predicted taken
.L663:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   228  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   229  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   230  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   231  	CAN_SRC0       =  0x00001001;  // set service request control register
	mov	d15,#4097
	movh.a	a15,#61440
	st.w	[a15]@los(0xf00040fc),d15
.L664:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   232  	CAN_SRC1       =  0x00001002;  // set service request control register
	mov	d15,#4098
	st.w	[a15]@los(0xf00040f8),d15
.L665:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   233  	CAN_SRC2       =  0x00001003;  // set service request control register
	mov	d15,#4099
	st.w	[a15]@los(0xf00040f4),d15
.L666:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   234  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   235  	//启动Node
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   236  	for(ui8_Node_Loop = 0U; ui8_Node_Loop < MAX_NODE_NUM; ui8_Node_Loop++)
	st.b	[a10]4,d10
.L667:
	movh.a	a4,#@his(st_CAN_Node)
	lea	a4,[a4]@los(st_CAN_Node)
.L668:
	mov.a	a5,#2
.L39:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   237  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   238  		if(st_CAN_Node[ui8_Node_Loop].b_Enable == TRUE)	//判断Node是否使能
	ld.bu	d15,[a10]4
.L669:
	mul	d15,d15,#20
	addsc.a	a15,a4,d15,#0
.L670:
	ld.bu	d15,[a15]
.L671:
	jne	d15,#1,.L40				; predicted taken
.L672:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   239  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   240  			//使能Node
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   241  			REG_CAN_NCR(ui8_Node_Loop) &= ~0x00000041;  //CAN_NCR reset INIT and CCE
	mov	d0,#16896
	ld.bu	d15,[a10]4
	sh	d15,d15,#8
	addih	d0,d0,#61440
	add	d15,d0
.L673:
	mov.a	a15,d15
.L674:
	mov	d0,#-66
	ld.w	d15,[a15]
	and	d15,d0
	st.w	[a15],d15
.L40:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   242  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   243  		ui32_BOFF_Delay_Count[ui8_Node_Loop] = st_CAN_Node[ui8_Node_Loop].ui32_BOFF_Dealy;
	ld.bu	d15,[a10]4
.L675:
	movh.a	a15,#@his(ui32_BOFF_Delay_Count)
	lea	a15,[a15]@los(ui32_BOFF_Delay_Count)
.L676:
	addsc.a	a15,a15,d15,#2
.L677:
	ld.bu	d15,[a10]4
.L678:
	mul	d15,d15,#20
	addsc.a	a2,a4,d15,#0
.L679:
	ld.w	d15,[a2]14
.L680:
	st.w	[a15],d15
.L681:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   244  		ui32_BOFF_Clear_Count[ui8_Node_Loop] = 0U;
	ld.bu	d15,[a10]4
.L682:
	movh.a	a15,#@his(ui32_BOFF_Clear_Count)
	lea	a15,[a15]@los(ui32_BOFF_Clear_Count)
.L683:
	addsc.a	a15,a15,d15,#2
.L684:
	st.w	[a15],d1
.L685:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   245  		ui8_CallCycle_Count[ui8_Node_Loop] = 0U;
	ld.bu	d15,[a10]4
.L686:
	movh.a	a15,#@his(ui8_CallCycle_Count)
	lea	a15,[a15]@los(ui8_CallCycle_Count)
.L687:
	addsc.a	a15,a15,d15,#0
.L688:
	st.b	[a15],d10
.L689:
	ld.bu	d15,[a10]4
.L690:
	add	d15,#1
	st.b	[a10]4,d15
.L691:
	loop	a5,.L39				; predicted taken
.L692:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   246  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   247  	CAN_Error_Clear();	//初始化清除CAN故障
	j	CAN_Error_Clear
.L293:
	
__CAN_Init_function_end:
	.size	CAN_Init,__CAN_Init_function_end-CAN_Init
.L187:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Read_By_ID',code,cluster('CAN_Read_By_ID')
	.sect	'.text.CanDrv_TC1782.CAN_Read_By_ID'
	.align	2
	
	.global	CAN_Read_By_ID

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   248  }
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   249  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   250  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   251  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   252  Function:		boolean CAN_Read_By_ID(uint32 ui32_ID, uint8 *TargetAddressPtr)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   253  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   254  Description: 	此函数用于基于CAN ID号接收CAN消息
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   255  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   256  Parameters: 	ui32_ID				CAN ID(11位或29位)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   257  				TargetAddressPtr	数据存放指针(指向8字节buffer)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   258  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   259  Return:       	boolean		用户可根据返回值判断CAN消息是否成功接收
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   260  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   261  Return Values:  TRUE		接收消息成功
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   262  				FALSE		接收消息失败
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   263  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   264  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   265  				用户在中间层需要接收CAN数据时调用此函数。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   266  				需保证输入参数CAN的ID号已经配置使能，并且完成过CAN初始化。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   267  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   268  Example:		接收ID号0x100的CAN数据存放至buffer数组
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   269  				ret_val = CAN_Read(0x100U, &buffer[0U]);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   270  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   271  boolean CAN_Read_By_ID(uint32 ui32_ID, uint8 *TargetAddressPtr)
; Function CAN_Read_By_ID
.L142:
CAN_Read_By_ID:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   272  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   273  	uint16	ui16_Loop_1;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   274  	uint8	ui8_Loop_2;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   275  	boolean b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   276  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   277  	b_Return = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   278  	for(ui16_Loop_1 = 0U; ui16_Loop_1 < MAX_CAN_RX_BY_ID_NUM; ui16_Loop_1++)	//检查符合输入参数ID的配置
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   279  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   280  		if(st_CAN_Rx_By_ID[ui16_Loop_1].b_Enable == TRUE)
	mov	d2,#0
	movh.a	a15,#@his(st_CAN_Rx_By_ID)
.L369:
	lea	a15,[a15]@los(st_CAN_Rx_By_ID)
.L697:
	mov	d0,#1
	lea	a2,119
.L41:
	ld.bu	d15,[a15]
.L698:
	jne	d15,#1,.L42				; predicted not taken
.L699:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   281  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   282  			if(ui32_ID == st_CAN_Rx_By_ID[ui16_Loop_1].ui32_ID)	//ID相等
	ld.w	d15,[a15]2
.L700:
	jne	d15,d4,.L43				; predicted not taken
.L701:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   283  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   284  				if(st_CAN_Rx_By_ID[ui16_Loop_1].b_Empty == FALSE)	//数据不为空
	ld.bu	d15,[a15]6
.L702:
	jne	d15,#0,.L44				; predicted not taken
.L703:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   285  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   286  					st_CAN_Rx_By_ID[ui16_Loop_1].b_Empty = TRUE;
	st.b	[a15]6,d0
.L704:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   287  					for(ui8_Loop_2 = 0U; ui8_Loop_2 < 8U; ui8_Loop_2++)
	mov.aa	a5,a4
.L705:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   288  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   289  						*(TargetAddressPtr + ui8_Loop_2) = st_CAN_Rx_By_ID[ui16_Loop_1].ui8_Data[ui8_Loop_2];
	lea	a6,[a15]7
.L706:
	mov.a	a7,#7
.L45:
	ld.bu	d15,[a6+]
.L707:
	st.b	[a5+],d15
.L708:
	loop	a7,.L45				; predicted taken
.L709:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   290  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   291  					b_Return = TRUE;
	mov	d2,#1
.L44:
.L43:
.L42:
	lea	a15,[a15]16
.L710:
	loop	a2,.L41				; predicted taken
.L711:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   292  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   293  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   294  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   295  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   296  	return(b_Return);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   297  }
	ret
.L301:
	
__CAN_Read_By_ID_function_end:
	.size	CAN_Read_By_ID,__CAN_Read_By_ID_function_end-CAN_Read_By_ID
.L192:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CANOBJ_Read',code,cluster('CANOBJ_Read')
	.sect	'.text.CanDrv_TC1782.CANOBJ_Read'
	.align	2
	
	.global	CANOBJ_Read

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   298  boolean CANOBJ_Read(uint8 ui8_Obj, uint8 *TargetAddressPtr)
; Function CANOBJ_Read
.L144:
CANOBJ_Read:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   299  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   300  	uint8	ui8_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   301  	boolean b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   302  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   303  	b_Return = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   304  	if((st_CAN_Object[ui8_Obj].b_Enable == TRUE)
	mul	d15,d4,#20
	movh.a	a15,#@his(st_CAN_Object)
	lea	a15,[a15]@los(st_CAN_Object)
.L840:
	addsc.a	a15,a15,d15,#0
.L841:
	mov	d2,#0
	ld.bu	d15,[a15]
.L371:
	jne	d15,#1,.L47				; predicted not taken
.L842:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   305  			&& (st_CAN_Object[ui8_Obj].b_Dir == CAN_RX_DIR))	//判断MO是否使能,并且MO为接收
	ld.bu	d15,[a15]2
.L843:
	jne	d15,#0,.L48				; predicted taken
.L844:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   306  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   307  		if(ui8_CallCycle_Count[ui8_Obj] > 1U)
	movh.a	a2,#@his(ui8_CallCycle_Count)
	lea	a2,[a2]@los(ui8_CallCycle_Count)
.L845:
	addsc.a	a2,a2,d4,#0
	ld.bu	d15,[a2]
.L846:
	jlt.u	d15,#2,.L49				; predicted not taken
.L847:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   308  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   309  			ui8_CallCycle_Count[ui8_Obj]--;
	add	d15,#-1
	st.b	[a2],d15
.L48:
.L47:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   310  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   311  		else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   312  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   313  			ui8_CallCycle_Count[ui8_Obj] = st_CAN_Object[ui8_Obj].ui8_CallCycle;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   314  			if((CAN_HWOBJ[ui8_Obj].uwMOCTR & 0x00000008))    // if NEWDAT
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   315  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   316  				for(ui8_Loop = 0U; ui8_Loop < 8U; ui8_Loop++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   317  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   318  					*(TargetAddressPtr + ui8_Loop) = CAN_HWOBJ[ui8_Obj].ubData[ui8_Loop];
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   319  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   320  				CAN_HWOBJ[ui8_Obj].uwMOCTR = 0x00000008;     // reset NEWDAT
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   321  				b_Return = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   322  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   323  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   324  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   325  	return(b_Return);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   326  }
	ret
.L49:
	sha	d4,#5
	ld.bu	d15,[a15]16
.L370:
	movh.a	a15,#61440
	lea	a15,[a15]@los(0xf0005000)
.L848:
	addsc.a	a15,a15,d4,#0
.L849:
	st.b	[a2],d15
.L850:
	lea	a2,[a15]28
	ld.w	d15,[a2]
.L851:
	jz.t	d15:3,.L51				; predicted not taken
.L852:
	lea	a15,[a15]16
.L853:
	mov.a	a5,#7
.L52:
	ld.bu	d15,[a15+]
.L854:
	st.b	[a4+],d15
.L855:
	loop	a5,.L52				; predicted taken
.L856:
	mov	d15,#8
	st.w	[a2],d15
.L857:
	mov	d2,#1
.L51:
	ret
.L339:
	
__CANOBJ_Read_function_end:
	.size	CANOBJ_Read,__CANOBJ_Read_function_end-CANOBJ_Read
.L242:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Read',code,cluster('CAN_Read')
	.sect	'.text.CanDrv_TC1782.CAN_Read'
	.align	2
	
	.global	CAN_Read

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   327  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   328  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   329  Function:		boolean CAN_Read(uint8 ui8_Obj, uint32* p_ui32_ID, uint8 *TargetAddressPtr)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   330  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   331  Description: 	此函数用于接收CAN消息
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   332  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   333  Parameters: 	ui8_Obj				CAN的MO号(0~127)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   334  				p_ui32_ID			CAN ID指针
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   335  				TargetAddressPtr	数据存放指针(指向8字节buffer)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   336  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   337  Return:       	boolean		用户可根据返回值判断CAN消息是否成功接收
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   338  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   339  Return Values:  TRUE		接收消息成功
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   340  				FALSE		接收消息失败
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   341  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   342  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   343  				用户在中间层需要接收CAN数据时调用此函数。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   344  				需保证输入参数CAN的MO号已经配置使能，并且完成过CAN初始化。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   345  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   346  Example:		接收MO0的CAN数据存放至buffer数组，CAN ID指向p_ID指针
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   347  				ret_val = CAN_Read(0U, p_ID, &buffer[0U]);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   348  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   349  boolean CAN_Read(uint8 ui8_Obj, uint32* p_ui32_ID, uint8 *TargetAddressPtr)
; Function CAN_Read
.L146:
CAN_Read:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   350  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   351  	boolean b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   352  	uint32 ui32_ID;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   353  	ui32_ID  = * p_ui32_ID ;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   354  //	b_Return = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   355  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   356  //	if(st_CAN_Object[ui8_Obj].b_RxIRQ == FALSE)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   357  //	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   358  		b_Return = CANOBJ_Read(  ui8_Obj,  TargetAddressPtr);
	mov.aa	a4,a5
.L372:
	j	CANOBJ_Read
.L310:
	
__CAN_Read_function_end:
	.size	CAN_Read,__CAN_Read_function_end-CAN_Read
.L197:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Write',code,cluster('CAN_Write')
	.sect	'.text.CanDrv_TC1782.CAN_Write'
	.align	2
	
	.global	CAN_Write

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   359  //	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   360  //	else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   361  //	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   362  //		b_Return = CAN_Read_By_ID(  ui32_ID,  TargetAddressPtr);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   363  //
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   364  //	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   365  	return(b_Return);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   366  }
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   367  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   368  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   369  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   370  Function:		boolean CAN_Write(uint8 ui8_Obj, uint8 *SourceAddressPtr)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   371  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   372  Description: 	此函数用于发送CAN消息
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   373  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   374  Parameters: 	ui8_Obj				CAN的MO号(0~127)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   375  				SourceAddressPtr	数据指针(指向8字节buffer)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   376  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   377  Return:       	boolean		用户可根据返回值判断CAN消息是否成功发送
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   378  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   379  Return Values:  TRUE		发送消息成功
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   380  				FALSE		发送消息失败
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   381  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   382  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   383  				用户在中间层需要发送CAN数据时调用此函数。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   384  				需保证输入参数CAN的MO号已经配置使能，并且完成过CAN初始化。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   385  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   386  Example:		使用MO1发送buffer数组里的数据到CAN总线
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   387  				ret_val = CAN_Write(1U, &buffer[0U]);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   388  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   389  boolean CAN_Write(uint8 ui8_Obj, uint8 *SourceAddressPtr)
; Function CAN_Write
.L148:
CAN_Write:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   390  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   391  	uint8	ui8_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   392  	boolean b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   393  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   394  	b_Return = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   395  	if((st_CAN_Object[ui8_Obj].b_Enable == TRUE)
	mul	d15,d4,#20
	movh.a	a2,#@his(st_CAN_Object)
	lea	a2,[a2]@los(st_CAN_Object)
.L720:
	addsc.a	a7,a2,d15,#0
.L721:
	mov	d2,#0
	ld.bu	d15,[a7]
.L374:
	mov.aa	a15,a4
.L375:
	jne	d15,#1,.L55				; predicted not taken
.L722:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   396  			&& (st_CAN_Object[ui8_Obj].b_Dir == CAN_TX_DIR))	//判断MO是否使能,并且MO为发送
	ld.bu	d15,[a7]2
.L723:
	jne	d15,#1,.L56				; prediction unknown
.L724:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   397  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   398  		if((SourceAddressPtr[1] == 0x7F) && (SourceAddressPtr[3] == 0x78))
	mov	d0,#127
	ld.bu	d15,[a15]1
.L725:
	jne	d15,d0,.L57				; predicted not taken
.L726:
	mov	d0,#120
	ld.bu	d15,[a15]3
.L727:
	jne	d15,d0,.L58				; predicted taken
.L728:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   399  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   400  				ui8_CallCycle_Count[ui8_Obj] = st_CAN_Object[ui8_Obj].ui8_CallCycle;
	movh.a	a2,#@his(ui8_CallCycle_Count)
	lea	a2,[a2]@los(ui8_CallCycle_Count)
.L729:
	addsc.a	a2,a2,d4,#0
.L730:
	ld.bu	d15,[a7]16
.L731:
	st.b	[a2],d15
.L58:
.L57:
	movh.a	a2,#@his(ui8_CallCycle_Count)
	lea	a2,[a2]@los(ui8_CallCycle_Count)
.L732:
	addsc.a	a2,a2,d4,#0
.L733:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   401  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   402  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   403  		if(ui8_CallCycle_Count[ui8_Obj] > 1U)
	ld.bu	d15,[a2]
.L734:
	jlt.u	d15,#2,.L59				; unsupported prediction taken forward branch
.L735:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   404  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   405  			ui8_CallCycle_Count[ui8_Obj]--;
	add	d15,#-1
	st.b	[a2],d15
.L736:
	j	.L60
.L59:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   406  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   407  		else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   408  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   409  //			ui8_CallCycle_Count[ui8_Obj] = st_CAN_Object[ui8_Obj].ui8_CallCycle;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   410  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   411  			CAN_HWOBJ[ui8_Obj].uwMOCTR = 0x00080000;       // set NEWDAT
	sha	d4,#5
	movh.a	a4,#61440
.L373:
	lea	a4,[a4]@los(0xf0005000)
.L737:
	addsc.a	a4,a4,d4,#0
.L738:
	movh	d15,#8
	lea	a5,[a4]28
.L739:
	st.w	[a5],d15
.L740:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   412  			for(ui8_Loop = 0U; ui8_Loop < 8U; ui8_Loop++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   413  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   414  				CAN_HWOBJ[ui8_Obj].ubData[ui8_Loop] = *(SourceAddressPtr++);
	lea	a6,[a4]16
.L741:
	mov.a	a12,#7
.L61:
	ld.bu	d15,[a15+]
.L742:
	st.b	[a6+],d15
.L743:
	loop	a12,.L61				; predicted taken
.L744:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   415  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   416  			CAN_HWOBJ[ui8_Obj].uwMOCTR = 0x00200040;       // reset RTSEL, set MSGVAL
	mov.u	d15,#32769
.L745:
	sh	d15,#6
	st.w	[a5],d15
.L746:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   417  			CAN_HWOBJ[ui8_Obj].uwMOCTR = 0x07000000;  // set TXRQ,TXEN0,TXEN1
	movh	d15,#1792
	st.w	[a5],d15
.L747:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   418  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   419  			if((CAN_HWOBJ[ui8_Obj].ubData[1] == 0x7F) && (CAN_HWOBJ[ui8_Obj].ubData[3] == 0x78))
	mov	d15,#127
	ld.bu	d1,[a4]17
.L748:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   420  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   421  				ui8_CallCycle_Count[ui8_Obj] = st_CAN_Object[ui8_Obj].ui8_CallCycle*10;
	ld.bu	d0,[a7]16
.L749:
	jne	d15,d1,.L62				; predicted not taken
.L750:
	mov	d15,#120
	ld.bu	d1,[a4]19
.L751:
	jne	d15,d1,.L63				; prediction unknown
.L752:
	mul	d15,d0,#10
	st.b	[a2],d15
.L753:
	j	.L64
.L63:
.L62:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   422  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   423  			else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   424  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   425  				ui8_CallCycle_Count[ui8_Obj] = st_CAN_Object[ui8_Obj].ui8_CallCycle;
	st.b	[a2],d0
.L64:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   426  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   427  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   428  			b_Return = TRUE;
	mov	d2,#1
.L60:
.L56:
.L55:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   429  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   430  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   431  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   432  	Update_Count = 0;			/*发送清零*/
	movh.a	a15,#@his(Update_Count)
.L376:
	mov	d15,#0
	st.w	[a15]@los(Update_Count),d15
.L754:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   433  	return(b_Return);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   434  }
	ret
.L316:
	
__CAN_Write_function_end:
	.size	CAN_Write,__CAN_Write_function_end-CAN_Write
.L202:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_MOs_TXPND_Reset',code,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.text.CanDrv_TC1782.CAN_MOs_TXPND_Reset'
	.align	2
	
	.global	CAN_MOs_TXPND_Reset

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   435  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   436  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   437  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   438  Function:		void CAN_MOs_TXPND_Reset(uint8 ui8_Obj)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   439  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   440  Description: 	此函数用于清除MO发送完成标志
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   441  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   442  Parameters: 	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   443  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   444  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   445  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   446  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   447  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   448  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   449  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   450  Example:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   451  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   452  void CAN_MOs_TXPND_Reset(uint8 ui8_Obj)
; Function CAN_MOs_TXPND_Reset
.L150:
CAN_MOs_TXPND_Reset:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   453  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   454  	REG_CAN_MOCTR(ui8_Obj) = CAN_MOSTAT0_TXPND;  //Reset TXPND
	sh	d4,#5
.L377:
	mov	d15,#20508
	addih	d15,d15,#61440
	add	d4,d15
	mov.a	a15,d4
.L759:
	mov	d15,#2
	st.w	[a15],d15
.L760:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   455  }
	ret
.L321:
	
__CAN_MOs_TXPND_Reset_function_end:
	.size	CAN_MOs_TXPND_Reset,__CAN_MOs_TXPND_Reset_function_end-CAN_MOs_TXPND_Reset
.L207:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_MOs_Transmit_Status',code,cluster('CAN_MOs_Transmit_Status')
	.sect	'.text.CanDrv_TC1782.CAN_MOs_Transmit_Status'
	.align	2
	
	.global	CAN_MOs_Transmit_Status

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   456  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   457  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   458  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   459  Function:		uint8 CAN_MOs_Transmit_Status(uint8 ui8_Obj)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   460  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   461  Description: 	此函数用于检查MO是否发送完成
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   462  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   463  Parameters: 	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   464  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   465  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   466  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   467  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   468  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   469  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   470  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   471  Example:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   472  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   473  uint8 CAN_MOs_Transmit_Status(uint8 ui8_Obj)
; Function CAN_MOs_Transmit_Status
.L152:
CAN_MOs_Transmit_Status:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   474  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   475  	uint8 b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   476  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   477  	b_Return = E_NOT_OK;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   478  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   479      if(REG_CAN_MOCTR(ui8_Obj) & CAN_MOSTAT0_TXPND)   //if TXPND is set
	mov	d15,#20508
	sh	d4,#5
.L378:
	addih	d15,d15,#61440
	add	d4,d15
	mov.a	a15,d4
.L765:
	mov	d2,#1
	ld.w	d15,[a15]
.L379:
	jz.t	d15:1,.L66				; predicted not taken
.L766:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   480      {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   481      	REG_CAN_MOCTR(ui8_Obj) = CAN_MOSTAT0_TXPND;  //Reset TXPND
	mov	d15,#2
	st.w	[a15],d15
.L767:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   482      	b_Return = E_OK;
	mov	d2,#0
.L66:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   483      }
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   484  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   485      return b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   486  }
	ret
.L323:
	
__CAN_MOs_Transmit_Status_function_end:
	.size	CAN_MOs_Transmit_Status,__CAN_MOs_Transmit_Status_function_end-CAN_MOs_Transmit_Status
.L212:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_MOs_Get_DLC',code,cluster('CAN_MOs_Get_DLC')
	.sect	'.text.CanDrv_TC1782.CAN_MOs_Get_DLC'
	.align	2
	
	.global	CAN_MOs_Get_DLC

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   487  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   488  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   489  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   490  Function:		uint8 CAN_MOs_Get_DLC(uint8 ui8_Obj)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   491  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   492  Description: 	获取CAN MO接收数据长度
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   493  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   494  Parameters: 	ui8_Obj
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   495  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   496  Return:       	uint8
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   497  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   498  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   499  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   500  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   501  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   502  Example:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   503  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   504  uint8 CAN_MOs_Get_DLC(uint8 ui8_Obj)
; Function CAN_MOs_Get_DLC
.L154:
CAN_MOs_Get_DLC:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   505  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   506  	uint8 ui8_DLC;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   507  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   508  	ui8_DLC = (REG_CAN_MOFCR(ui8_Obj) >> 24U) & 0x0FU;
	sh	d4,#5
.L380:
	mov	d15,#20480
	addih	d15,d15,#61440
	add	d4,d15
	mov.a	a15,d4
	ld.w	d15,[a15]
.L772:
	sh	d15,d15,#-24
.L773:
	and	d2,d15,#15
.L381:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   509  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   510  	return ui8_DLC;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   511  }
	ret
.L326:
	
__CAN_MOs_Get_DLC_function_end:
	.size	CAN_MOs_Get_DLC,__CAN_MOs_Get_DLC_function_end-CAN_MOs_Get_DLC
.L217:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Set_ID',code,cluster('CAN_Set_ID')
	.sect	'.text.CanDrv_TC1782.CAN_Set_ID'
	.align	2
	
	.global	CAN_Set_ID

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   512  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   513  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   514  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   515  Function:		void CAN_Set_ID(uint8 ui8_Obj, uint32 ui32_ID)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   516  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   517  Description: 	此函数用于设置CAN ID号
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   518  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   519  Parameters: 	ui8_Obj		CAN的MO号(0~127)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   520  				ui32_ID		CAN的ID号(11位或29位)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   521  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   522  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   523  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   524  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   525  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   526  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   527  				用户在中间层需要设置CAN ID号时调用此函数。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   528  				需保证输入参数CAN的MO号已经配置使能，并且完成过CAN初始化。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   529  				MO若配置为标准帧，ID参数为11位；MO若配置为扩展帧，ID参数为29位。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   530  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   531  Example:		设置MO0的CAN ID号为0x200
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   532  				CAN_Set_ID(0U,0x200U);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   533  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   534  void CAN_Set_ID(uint8 ui8_Obj, uint32 ui32_ID)
; Function CAN_Set_ID
.L156:
CAN_Set_ID:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   535  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   536  	if(st_CAN_Object[ui8_Obj].b_IDE == CAN_STD_ID)	//11位CAN ID
	mul	d15,d4,#20
	movh.a	a15,#@his(st_CAN_Object)
	lea	a15,[a15]@los(st_CAN_Object)
.L778:
	addsc.a	a15,a15,d15,#0
.L779:
	ld.bu	d15,[a15]6
.L780:
	jne	d15,#0,.L69				; predicted taken
.L781:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   537  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   538  		REG_CAN_MOAR(ui8_Obj) =  ((uint32)ui32_ID << 18U) + 0x80000000;  //CAN_MOAR
	sh	d4,#5
.L382:
	mov	d15,#20504
	addih	d15,d15,#61440
	add	d4,d15
	mov.a	a15,d4
.L782:
	sh	d15,d5,#18
.L783:
	movh	d0,#32768
.L784:
	add	d15,d0
	st.w	[a15],d15
.L785:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   539  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   540  	else if(st_CAN_Object[ui8_Obj].b_IDE == CAN_EXT_ID)	//29位CAN ID
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   541  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   542  		REG_CAN_MOAR(ui8_Obj) =  (uint32)ui32_ID + 0xA0000000;  //CAN_MOAR
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   543  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   544  }
	ret
.L69:
	jne	d15,#1,.L71				; predicted taken
.L786:
	sh	d4,#5
.L383:
	mov	d15,#20504
	addih	d15,d15,#61440
	add	d4,d15
	mov.a	a15,d4
.L787:
	movh	d15,#40960
.L788:
	add	d5,d15
	st.w	[a15],d5
.L71:
	ret
.L329:
	
__CAN_Set_ID_function_end:
	.size	CAN_Set_ID,__CAN_Set_ID_function_end-CAN_Set_ID
.L222:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Read_Error',code,cluster('CAN_Read_Error')
	.sect	'.text.CanDrv_TC1782.CAN_Read_Error'
	.align	2
	
	.global	CAN_Read_Error

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   545  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   546  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   547  Function:		void CAN_Read_Error(void)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   548  Description: 	读取CAN故障
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   549  Input: 			void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   550  Output:       	None
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   551  Return:        	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   552  Time:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   553  Others:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   554  Physical Test：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   555  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   556  void CAN_Read_Error(void)
; Function CAN_Read_Error
.L158:
CAN_Read_Error:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   557  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   558  	uint32	ui32_Temp;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   559  	uint8	ui8_Node_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   560  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   561  	for(ui8_Node_Loop = 0U; ui8_Node_Loop < MAX_NODE_NUM; ui8_Node_Loop++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   562  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   563  		if(st_CAN_Node[ui8_Node_Loop].b_Enable == TRUE)	//判断Node是否使能
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   564  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   565  			ui32_Temp = REG_CAN_NSR(ui8_Node_Loop);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   566  			if (ui32_Temp & 0x00000020)      // if ALERT
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   567  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   568  				if (ui32_Temp & 0x00000080)  // if BOFF
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   569  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   570  					st_CAN_Error[ui8_Node_Loop].b_BOFF = TRUE;
	mov	d8,#0
	movh.a	a15,#@his(st_CAN_Error)
.L384:
	lea	a15,[a15]@los(st_CAN_Error)
.L862:
	movh.a	a12,#@his(st_CAN_Node)
	lea	a12,[a12]@los(st_CAN_Node)
.L863:
	mov	d15,#1
	mov.a	a13,#2
.L72:
	ld.bu	d0,[a12]
.L864:
	jne	d0,#1,.L73				; predicted taken
.L865:
	sh	d0,d8,#8
	mov	d1,#16900
	addih	d1,d1,#61440
	add	d1,d0
	mov.a	a2,d1
	ld.w	d2,[a2]
.L385:
	jz.t	d2:5,.L74				; predicted not taken
.L866:
	jz.t	d2:7,.L75				; unsupported prediction taken forward branch
.L867:
	st.b	[a15],d15
.L75:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   571  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   572  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   573  				if (ui32_Temp & 0x00000040)  // if EWRN
	jz.t	d2:6,.L76				; unsupported prediction taken forward branch
.L868:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   574  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   575  					st_CAN_Error[ui8_Node_Loop].b_EWRN = TRUE;
	st.b	[a15]1,d15
.L76:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   576  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   577  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   578  				if (ui32_Temp & 0x00000100)  // if LLE
	jz.t	d2:8,.L77				; unsupported prediction taken forward branch
.L869:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   579  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   580  					st_CAN_Error[ui8_Node_Loop].b_LLE = TRUE;
	st.b	[a15]2,d15
.L870:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   581  					REG_CAN_NSR(ui8_Node_Loop) = 0x00000238;    // reset LLE
	mov.a	a2,d1
.L871:
	mov	d3,#568
	st.w	[a2],d3
.L77:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   582  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   583  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   584  				if (ui32_Temp & 0x00000200)  // if LOE
	jz.t	d2:9,.L78				; unsupported prediction taken forward branch
.L872:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   585  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   586  					st_CAN_Error[ui8_Node_Loop].b_LOE = TRUE;
	st.b	[a15]3,d15
.L873:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   587  					REG_CAN_NSR(ui8_Node_Loop) = 0x00000138;    // reset LOE
	mov.a	a2,d1
.L874:
	mov	d3,#312
	st.w	[a2],d3
.L78:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   588  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   589  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   590  				if (REG_CAN_NCR(ui8_Node_Loop) & 0x00000001) // if INIT
	mov	d3,#16896
	addih	d3,d3,#61440
	add	d0,d3
	mov.a	a2,d0
	ld.w	d0,[a2]
.L875:
	jz.t	d0:0,.L79				; unsupported prediction taken forward branch
.L876:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   591  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   592  					st_CAN_Error[ui8_Node_Loop].b_INIT = TRUE;
	st.b	[a15]4,d15
.L79:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   593  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   594  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   595  				REG_CAN_NSR(ui8_Node_Loop) = 0x00000318;    // reset ALERT
	mov.a	a2,d1
.L877:
	mov	d0,#792
	st.w	[a2],d0
.L74:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   596  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   597  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   598  			if (ui32_Temp & 0x00000007)  // if LEC
	and	d0,d2,#7
.L878:
	jeq	d0,#0,.L80				; predicted not taken
.L879:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   599  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   600  				switch (ui32_Temp & 0x00000007)  // LEC0 (Last Error Code0)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   601  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   602  					case ERROR_STUFF: // Stuff Error
	jeq	d0,#1,.L81				; prediction unknown
.L880:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   603  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   604  						st_CAN_Error[ui8_Node_Loop].b_Stuff = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   605  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   606  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   607  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   608  					case ERROR_FORM: // Form Error
	jeq	d0,#2,.L82				; prediction unknown
.L881:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   609  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   610  						st_CAN_Error[ui8_Node_Loop].b_Form = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   611  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   612  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   613  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   614  					case ERROR_ACK: // Ack Error
	jeq	d0,#3,.L83				; prediction unknown
.L882:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   615  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   616  						st_CAN_Error[ui8_Node_Loop].b_Ack = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   617  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   618  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   619  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   620  					case ERROR_BIT1: // Bit1 Error
	jeq	d0,#4,.L84				; prediction unknown
.L883:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   621  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   622  						st_CAN_Error[ui8_Node_Loop].b_Bit1 = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   623  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   624  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   625  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   626  					case ERROR_BIT0: // Bit0 Error
	jeq	d0,#5,.L85				; prediction unknown
.L884:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   627  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   628  						if (ui32_Temp & 0x00000080)  // if Busoff status
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   629  						{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   630  							st_CAN_Error[ui8_Node_Loop].b_Bit0_BOFF = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   631  						}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   632  						else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   633  						{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   634  							st_CAN_Error[ui8_Node_Loop].b_Bit0_Trans = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   635  						}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   636  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   637  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   638  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   639  					case ERROR_CRC: // CRC Error
	jeq	d0,#6,.L86				; prediction unknown
.L885:
	j	.L87
.L81:
	st.b	[a15]5,d15
.L886:
	j	.L88
.L82:
	st.b	[a15]6,d15
.L887:
	j	.L89
.L83:
	st.b	[a15]7,d15
.L888:
	j	.L90
.L84:
	st.b	[a15]8,d15
.L889:
	j	.L91
.L85:
	jz.t	d2:7,.L92				; prediction unknown
.L890:
	st.b	[a15]9,d15
.L891:
	j	.L93
.L92:
	st.b	[a15]10,d15
.L892:
	j	.L94
.L86:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   640  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   641  						st_CAN_Error[ui8_Node_Loop].b_CRC = TRUE;
	st.b	[a15]11,d15

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   642  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   643  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   644  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   645  					default:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   646  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   647  						break;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   648  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   649  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   650  				REG_CAN_NSR(ui8_Node_Loop) = 0x0000033F;    // reset LEC
.L94:
.L93:
.L91:
.L90:
.L89:
.L88:
.L87:
	mov.a	a2,d1
.L893:
	mov	d0,#831
	st.w	[a2],d0
.L80:
.L73:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   651  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   652  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   653  		CAN_Error_Callback(ui8_Node_Loop);	//CAN故障回调
	mov	d4,d8
.L386:
	call	CAN_Error_Callback
.L387:
	add	d8,#1
	lea	a15,[a15]12
	lea	a12,[a12]20
.L894:
	loop	a13,.L72				; predicted taken
.L895:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   654  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   655  }
	ret
.L344:
	
__CAN_Read_Error_function_end:
	.size	CAN_Read_Error,__CAN_Read_Error_function_end-CAN_Read_Error
.L247:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Error_Clear',code,cluster('CAN_Error_Clear')
	.sect	'.text.CanDrv_TC1782.CAN_Error_Clear'
	.align	2
	
	.global	CAN_Error_Clear

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   656  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   657  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   658  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   659  Function:		void CAN_Error_Clear(void)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   660  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   661  Description: 	此函数用于清除CAN故障信息
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   662  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   663  Parameters: 	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   664  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   665  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   666  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   667  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   668  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   669  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   670  				用户在中间层需要清除CAN故障信息时调用此函数。
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   671  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   672  Example:		清除CAN故障
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   673  				CAN_Error_Clear();
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   674  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   675  void CAN_Error_Clear(void)
; Function CAN_Error_Clear
.L160:
CAN_Error_Clear:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   676  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   677  	uint8	ui8_Node_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   678  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   679  	for(ui8_Node_Loop = 0U; ui8_Node_Loop < MAX_NODE_NUM; ui8_Node_Loop++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   680  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   681  		//清除CAN故障
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   682  		st_CAN_Error[ui8_Node_Loop].b_BOFF = FALSE;
	mov	d15,#0
	movh.a	a15,#@his(st_CAN_Error)
	lea	a15,[a15]@los(st_CAN_Error)
.L793:
	mov.a	a2,#2
.L95:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   683  		st_CAN_Error[ui8_Node_Loop].b_EWRN = FALSE;
	st.b	[a15]1,d15
.L794:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   684  		st_CAN_Error[ui8_Node_Loop].b_LLE = FALSE;
	st.b	[a15]2,d15
.L795:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   685  		st_CAN_Error[ui8_Node_Loop].b_LOE = FALSE;
	st.b	[a15]3,d15
.L796:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   686  		st_CAN_Error[ui8_Node_Loop].b_INIT = FALSE;
	st.b	[a15]4,d15
.L797:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   687  		st_CAN_Error[ui8_Node_Loop].b_Stuff = FALSE;
	st.b	[a15]5,d15
.L798:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   688  		st_CAN_Error[ui8_Node_Loop].b_Form = FALSE;
	st.b	[a15]6,d15
.L799:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   689  		st_CAN_Error[ui8_Node_Loop].b_Ack = FALSE;
	st.b	[a15]7,d15
.L800:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   690  		st_CAN_Error[ui8_Node_Loop].b_Bit1 = FALSE;
	st.b	[a15]8,d15
.L801:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   691  		st_CAN_Error[ui8_Node_Loop].b_Bit0_BOFF = FALSE;
	st.b	[a15]9,d15
.L802:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   692  		st_CAN_Error[ui8_Node_Loop].b_Bit0_Trans = FALSE;
	st.b	[a15]10,d15
.L803:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   693  		st_CAN_Error[ui8_Node_Loop].b_CRC = FALSE;
	st.b	[a15]11,d15
.L804:
	st.b	[a15+]12,d15
.L805:
	loop	a2,.L95				; predicted taken
.L806:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   694  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   695  }
	ret
.L332:
	
__CAN_Error_Clear_function_end:
	.size	CAN_Error_Clear,__CAN_Error_Clear_function_end-CAN_Error_Clear
.L227:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Read_BusOff',code,cluster('CAN_Read_BusOff')
	.sect	'.text.CanDrv_TC1782.CAN_Read_BusOff'
	.align	2
	
	.global	CAN_Read_BusOff

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   696  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   697  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   698  Function:		boolean CAN_Read_BusOff(uint8 ui8_Node)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   699  Description: 	此函数用于读取BUSOFF信息
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   700  Input: 			ui8_Node	CAN Node
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   701  Output:       	None
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   702  Return:        	TRUE		进入BUSOFF
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   703  				FALSE	没有进入BUSOFF
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   704  Time:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   705  Others:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   706  Physical Test：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   707  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   708  boolean CAN_Read_BusOff(uint8 ui8_Node)
; Function CAN_Read_BusOff
.L162:
CAN_Read_BusOff:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   709  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   710  	boolean b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   711  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   712  	b_Return = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   713  	if(st_CAN_Error[ui8_Node].b_BOFF == TRUE)
	mul	d15,d4,#12
	movh.a	a15,#@his(st_CAN_Error)
	lea	a15,[a15]@los(st_CAN_Error)
.L900:
	addsc.a	a15,a15,d15,#0
.L901:
	mov	d2,#0
	ld.bu	d15,[a15]
.L388:
	eq	d15,d15,#1
.L902:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   714  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   715  		b_Return = TRUE;
	cmov	d2,d15,#1
.L903:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   716  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   717  	return b_Return;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   718  }
	ret
.L347:
	
__CAN_Read_BusOff_function_end:
	.size	CAN_Read_BusOff,__CAN_Read_BusOff_function_end-CAN_Read_BusOff
.L252:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_BusOff_Clear',code,cluster('CAN_BusOff_Clear')
	.sect	'.text.CanDrv_TC1782.CAN_BusOff_Clear'
	.align	2
	
	.global	CAN_BusOff_Clear

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   719  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   720  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   721  Function:		void CAN_BusOff_Clear(uint8 ui8_Node)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   722  Description: 	此函数用于清除BUSOFF
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   723  Input: 			ui8_Node	CAN Node
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   724  Output:       	None
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   725  Return:        	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   726  Time:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   727  Others:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   728  Physical Test：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   729  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   730  void CAN_BusOff_Clear(uint8 ui8_Node)
; Function CAN_BusOff_Clear
.L164:
CAN_BusOff_Clear:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   731  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   732  	ui32_BOFF_Clear_Count[ui8_Node]++;
	movh.a	a15,#@his(ui32_BOFF_Clear_Count)
	lea	a15,[a15]@los(ui32_BOFF_Clear_Count)
.L908:
	addsc.a	a15,a15,d4,#2
	ld.w	d15,[a15]
.L909:
	add	d15,#1
	st.w	[a15],d15
.L910:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   733  	if(ui32_BOFF_Clear_Count[ui8_Node] >= BUS_OFF_SLOW_THRESHOLD)	//大于阀值，切换到慢速恢复
	jlt.u	d15,#10,.L98				; unsupported prediction taken forward branch
.L911:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   734  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   735  		st_CAN_Node[ui8_Node].ui32_BOFF_Dealy = BUS_OFF_DEALY_SLOW;	//慢速恢复
	mul	d15,d4,#20
	movh.a	a15,#@his(st_CAN_Node)
	lea	a15,[a15]@los(st_CAN_Node)
.L912:
	addsc.a	a15,a15,d15,#0
.L913:
	mov	d15,#100
	st.w	[a15]14,d15
.L98:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   736  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   737  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   738  	REG_CAN_NCR(ui8_Node) &= ~0x00000041;  //CAN_NCR reset INIT and CCE
	mov	d0,#16896
	sh	d15,d4,#8
	addih	d0,d0,#61440
	add	d15,d0
	mov.a	a15,d15
.L914:
	mov	d0,#-66
	ld.w	d15,[a15]
.L915:
	and	d15,d0
	st.w	[a15],d15
.L916:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   739  	st_CAN_Error[ui8_Node].b_BOFF = FALSE;
	mul	d15,d4,#12
	movh.a	a15,#@his(st_CAN_Error)
	lea	a15,[a15]@los(st_CAN_Error)
.L917:
	addsc.a	a15,a15,d15,#0
.L918:
	mov	d15,#0
	st.b	[a15],d15
.L919:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   740  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   741  	//根据不同Node号分别处理故障
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   742  	if(ui8_Node == 0U)
	jeq	d4,#0,.L99				; predicted not taken
.L920:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   743  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   744  //		b_VbHDD_CAN0MduFlt_flg_Valid = FALSE	;		//CAN0收发器故障清零
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   745  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   746  	else if(ui8_Node == 1U)
	jeq	d4,#1,.L100				; predicted not taken
.L921:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   747  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   748  //		b_VbHDD_CAN1MduFlt_flg_Valid = FALSE	;		//CAN1收发器故障清零
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   749  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   750  	else if(ui8_Node == 2U)
	jeq	d4,#2,.L101				; predicted taken
.L922:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   751  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   752  //		b_VbHDD_CAN2MduFlt_flg_Valid = FALSE	;		//CAN2收发器故障清零
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   753  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   754  	else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   755  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   756  		__nop();
	nop
.L101:
.L100:
.L99:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   757  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   758  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   759  }
	ret
.L350:
	
__CAN_BusOff_Clear_function_end:
	.size	CAN_BusOff_Clear,__CAN_BusOff_Clear_function_end-CAN_BusOff_Clear
.L257:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_BusOff_Deal',code,cluster('CAN_BusOff_Deal')
	.sect	'.text.CanDrv_TC1782.CAN_BusOff_Deal'
	.align	2
	
	.global	CAN_BusOff_Deal

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   760  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   761  /*************************************************************************/
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   762  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   763  Function:		void CAN_BusOff_Deal(void)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   764  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   765  Description: 	此函数用于busoff恢复处理
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   766  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   767  Parameters: 	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   768  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   769  Return:       	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   770  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   771  Return Values:  无
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   772  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   773  Remarks:		运行时间<1ms
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   774  				用户在固定周期(推荐10ms)中调用此函数用来BusOff恢复
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   775  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   776  Example:		BusOff恢复处理
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   777  				CAN_BusOff_Deal();
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   778  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   779  void CAN_BusOff_Deal(void)
; Function CAN_BusOff_Deal
.L166:
CAN_BusOff_Deal:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   780  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   781  	uint8	ui8_Node_Loop;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   782  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   783  	for(ui8_Node_Loop = 0U; ui8_Node_Loop < MAX_NODE_NUM; ui8_Node_Loop++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   784  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   785  		if(st_CAN_Node[ui8_Node_Loop].b_Enable == TRUE)	//判断Node是否使能
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   786  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   787  			if((REG_CAN_NSR(ui8_Node_Loop) & 0x00000008U) != 0U)	//判断是否该节点有数据成功发送
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   788  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   789  				REG_CAN_NSR(ui8_Node_Loop) &= 0xFFFFFFF7U;	//清发送完成标志
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   790  				ui32_BOFF_Clear_Count[ui8_Node_Loop] = 0U;	//清除计数器
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   791  				st_CAN_Node[ui8_Node_Loop].ui32_BOFF_Dealy = BUS_OFF_DEALY_FAST;	//快速恢复
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   792  				ui32_BOFF_Delay_Count[ui8_Node_Loop] = st_CAN_Node[ui8_Node_Loop].ui32_BOFF_Dealy;
	mov	d8,#0
	movh.a	a15,#@his(ui32_BOFF_Delay_Count)
.L389:
	lea	a15,[a15]@los(ui32_BOFF_Delay_Count)
.L811:
	movh.a	a12,#@his(st_CAN_Node)
	lea	a12,[a12]@los(st_CAN_Node)
.L812:
	movh.a	a13,#@his(ui32_BOFF_Clear_Count)
	lea	a13,[a13]@los(ui32_BOFF_Clear_Count)
.L813:
	mov.a	a14,#2
.L102:
	ld.bu	d15,[a12]
.L814:
	jne	d15,#1,.L103				; predicted taken
.L815:
	sh	d15,d8,#8
	mov	d0,#16900
	addih	d0,d0,#61440
	add	d15,d0
	mov.a	a2,d15
	ld.w	d15,[a2]
.L816:
	jz.t	d15:3,.L104				; predicted not taken
.L817:
	ld.w	d15,[a2]
.L818:
	insert	d15,d15,#0,#3,#1
	st.w	[a2],d15
.L819:
	mov	d15,#0
	st.w	[a13],d15
.L820:
	mov	d15,#5
	st.w	[a12]14,d15
.L821:
	st.w	[a15],d15
.L104:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   793  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   794  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   795  			if(CAN_Read_BusOff(ui8_Node_Loop) == TRUE)	//判断是否进入BUSOFF
	mov	d4,d8
.L390:
	call	CAN_Read_BusOff
.L391:
	jeq	d2,#0,.L105				; predicted taken
.L822:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   796  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   797  				if(ui32_BOFF_Delay_Count[ui8_Node_Loop] > 0U)
	ld.w	d15,[a15]
.L823:
	jeq	d15,#0,.L106				; predicted not taken
.L824:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   798  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   799  					ui32_BOFF_Delay_Count[ui8_Node_Loop]--;
	add	d15,#-1
.L825:
	j	.L107
.L106:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   800  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   801  				else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   802  				{	//BUSOFF计数器为0时清除BUSOFF
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   803  					CAN_BusOff_Clear(ui8_Node_Loop);
	mov	d4,d8
.L392:
	call	CAN_BusOff_Clear
.L393:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   804  					ui32_BOFF_Delay_Count[ui8_Node_Loop] = st_CAN_Node[ui8_Node_Loop].ui32_BOFF_Dealy;
	ld.w	d15,[a12]14
.L107:
	st.w	[a15],d15
.L105:
.L103:
	add	d8,#1
	add.a	a15,#4
	lea	a12,[a12]20
	add.a	a13,#4
.L826:
	loop	a14,.L102				; predicted taken
.L827:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   805  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   806  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   807  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   808  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   809  }
	ret
.L334:
	
__CAN_BusOff_Deal_function_end:
	.size	CAN_BusOff_Deal,__CAN_BusOff_Deal_function_end-CAN_BusOff_Deal
.L232:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Rx_Interrupt',code,cluster('CAN_Rx_Interrupt')
	.sect	'.text.CanDrv_TC1782.CAN_Rx_Interrupt'
	.align	2
	
	.global	CAN_Rx_Interrupt

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   810  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   811  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   812  Function:		void CAN_Rx_Interrupt(uint8 ui8_Obj)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   813  Description: 	CAN接收中断处理
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   814  Input: 			ui8_Obj	CAN MO
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   815  Output:       	None
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   816  Return:        	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   817  Time:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   818  Others:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   819  Physical Test：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   820  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   821  void CAN_Rx_Interrupt(uint8 ui8_Obj)
; Function CAN_Rx_Interrupt
.L168:
CAN_Rx_Interrupt:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   822  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   823  	uint16	ui16_Loop_1;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   824  	uint8	ui8_Loop_2;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   825  	uint32	ui32_ID;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   826  	boolean	b_Rx_By_ID;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   827  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   828  	if(CAN_HWOBJ[ui8_Obj].uwMOCTR & CAN_MOSTAT_RXPND)        // if message object  receive interrupt
	sha	d15,d4,#5
	movh.a	a15,#61440
	lea	a15,[a15]@los(0xf0005000)
.L927:
	addsc.a	a15,a15,d15,#0
.L928:
	lea	a12,[a15]28
	ld.w	d15,[a12]
.L929:
	jz.t	d15:0,.L108				; predicted not taken
.L930:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   829  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   830  		if(CAN_HWOBJ[ui8_Obj].uwMOCTR & CAN_MOSTAT_NEWDAT)     // if NEWDAT is set
	ld.w	d15,[a12]
.L931:
	jz.t	d15:3,.L109				; predicted not taken
.L932:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   831  		{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   832  			if (CAN_HWOBJ[ui8_Obj].uwMOCTR & CAN_MOSTAT_MSGLST)  // if MSGLST is set
	ld.w	d15,[a12]
.L933:
	jz.t	d15:4,.L110				; predicted not taken
.L934:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   833  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   834  				CAN_HWOBJ[ui8_Obj].uwMOCTR = CAN_MOSTAT_MSGLST;    // reset MSGLST
	mov	d15,#16
	st.w	[a12],d15
.L110:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   835  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   836  			//接收CAN ID
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   837  			if(st_CAN_Object[ui8_Obj].b_IDE == CAN_STD_ID)	//11位CAN ID
	mul	d15,d4,#20
	movh.a	a2,#@his(st_CAN_Object)
	lea	a2,[a2]@los(st_CAN_Object)
.L935:
	addsc.a	a2,a2,d15,#0
.L936:
	mov	d0,#0
	ld.bu	d15,[a2]6
.L937:
	jne	d15,#0,.L111				; predicted taken
.L938:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   838  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   839  				ui32_ID = (CAN_HWOBJ[ui8_Obj].uwMOAR >> 18U) & 0x7FFU;
	ld.w	d15,[a15]24
.L939:
	extr.u	d1,d15,#18,#11
.L395:
	j	.L112
.L111:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   840  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   841  			else if(st_CAN_Object[ui8_Obj].b_IDE == CAN_EXT_ID)	//29位CAN ID
	jne	d15,#1,.L113				; predicted not taken
.L940:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   842  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   843  				ui32_ID = CAN_HWOBJ[ui8_Obj].uwMOAR & 0x1FFFFFFFU;
	ld.w	d15,[a15]24
.L941:
	insert	d1,d15,#0,#29,#3
.L396:
	j	.L114
.L113:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   844  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   845  			else
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   846  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   847  				ui32_ID = 0xFFFFFFFFU;
	mov	d1,#-1
.L397:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   848  				__nop();
	nop
.L114:
.L112:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   849  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   850  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   851  			//根据CAN ID接收数据
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   852  			b_Rx_By_ID = FALSE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   853  			for(ui16_Loop_1 = 0U; ui16_Loop_1 < MAX_CAN_RX_BY_ID_NUM; ui16_Loop_1++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   854  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   855  				if(st_CAN_Rx_By_ID[ui16_Loop_1].b_Enable == TRUE)
	movh.a	a2,#@his(st_CAN_Rx_By_ID)
	lea	a2,[a2]@los(st_CAN_Rx_By_ID)
.L942:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   856  				{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   857  					if(ui32_ID == st_CAN_Rx_By_ID[ui16_Loop_1].ui32_ID)	//ID相等
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   858  					{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   859  						for(ui8_Loop_2 = 0U; ui8_Loop_2 < 8U; ui8_Loop_2++)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   860  						{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   861  							st_CAN_Rx_By_ID[ui16_Loop_1].ui8_Data[ui8_Loop_2] = CAN_HWOBJ[ui8_Obj].ubData[ui8_Loop_2];
	add.a	a15,#0
.L943:
	lea	a15,[a15]16
.L944:
	lea	a4,119
.L115:
	ld.bu	d15,[a2]
.L945:
	jne	d15,#1,.L116				; predicted not taken
.L946:
	ld.w	d15,[a2]2
.L947:
	jne	d15,d1,.L117				; predicted not taken
.L948:
	lea	a4,[a2]7
.L949:
	mov.a	a5,#7
.L118:
	ld.bu	d15,[a15+]
.L950:
	st.b	[a4+],d15
.L951:
	loop	a5,.L118				; predicted taken
.L952:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   862  						}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   863  						st_CAN_Rx_By_ID[ui16_Loop_1].b_Empty = FALSE;
	st.b	[a2]6,d0
.L953:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   864  						b_Rx_By_ID = TRUE;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   865  						break;
	j	.L119
.L117:
.L116:
	lea	a2,[a2]16
.L954:
	loop	a4,.L115				; predicted taken

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   866  					}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   867  				}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   868  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   869  			if(b_Rx_By_ID == FALSE)	//没有查询到对应ID的配置，报故障
.L119:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   870  			{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   871  //				Dem_ReportErrorStatus(DEM_EVENT_ID_Rx_By_ID_FAULT, DEM_EVENT_STATUS_FAILED);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   872  			}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   873  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   874  			CAN_Rx_Interrupt_Callback(ui8_Obj);
	call	CAN_Rx_Interrupt_Callback
.L394:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   875  			CAN_HWOBJ[ui8_Obj].uwMOCTR = CAN_MOSTAT_NEWDAT;      // reset NEWDAT
	mov	d15,#8
	st.w	[a12],d15
.L109:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   876  		}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   877  		CAN_HWOBJ[ui8_Obj].uwMOCTR = CAN_MOSTAT_RXPND;         // reset RXPND
	mov	d15,#1
	st.w	[a12],d15
.L108:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   878  	}  // End of RXPND0
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   879  }
	ret
.L352:
	
__CAN_Rx_Interrupt_function_end:
	.size	CAN_Rx_Interrupt,__CAN_Rx_Interrupt_function_end-CAN_Rx_Interrupt
.L262:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_Tx_Interrupt',code,cluster('CAN_Tx_Interrupt')
	.sect	'.text.CanDrv_TC1782.CAN_Tx_Interrupt'
	.align	2
	
	.global	CAN_Tx_Interrupt

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   880  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   881  /*
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   882  Function:		void CAN_Tx_Interrupt(uint8 ui8_Obj)
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   883  Description: 	CAN发送完成中断处理
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   884  Input: 			ui8_Obj	CAN MO
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   885  Output:       	None
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   886  Return:        	void
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   887  Time:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   888  Others:
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   889  Physical Test：
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   890  */
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   891  void CAN_Tx_Interrupt(uint8 ui8_Obj)
; Function CAN_Tx_Interrupt
.L170:
CAN_Tx_Interrupt:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   892  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   893  	if(CAN_HWOBJ[ui8_Obj].uwMOCTR & CAN_MOSTAT_TXPND)        // if message object  transmit interrupt
	sha	d15,d4,#5
	movh.a	a15,#61440
	lea	a15,[a15]@los(0xf0005000)
.L959:
	addsc.a	a15,a15,d15,#0
.L960:
	ld.w	d15,[+a15]28
.L961:
	jz.t	d15:1,.L120				; predicted taken
.L962:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   894  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   895  		CAN_Tx_Interrupt_Callback(ui8_Obj);
	call	CAN_Tx_Interrupt_Callback
.L398:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   896  		CAN_HWOBJ[ui8_Obj].uwMOCTR = CAN_MOSTAT_NEWDAT;        // reset NEWDAT
	mov	d15,#8
	st.w	[a15],d15
.L963:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   897  		CAN_HWOBJ[ui8_Obj].uwMOCTR = CAN_MOSTAT_TXPND;         // reset TXPND
	mov	d15,#2
	st.w	[a15],d15
.L120:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   898  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   899  }
	ret
.L357:
	
__CAN_Tx_Interrupt_function_end:
	.size	CAN_Tx_Interrupt,__CAN_Tx_Interrupt_function_end-CAN_Tx_Interrupt
.L267:
	; End of function
	
	.sdecl	'.text.intvec.001',code
	.sect	'.text.intvec.001'

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   900  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   901  void INTERRUPT (CAN_SRN0INT) CAN_viSRN0(void)
	movh.a	a14,#@his(CAN_viSRN0)
	lea	a14,[a14]@los(CAN_viSRN0)
	ji	a14
	.sdecl	'.text.CanDrv_TC1782.CAN_viSRN0',code,cluster('CAN_viSRN0')
	.sect	'.text.CanDrv_TC1782.CAN_viSRN0'
	.align	2
	
	.global	CAN_viSRN0
; Function CAN_viSRN0
.L172:
CAN_viSRN0:	.type	func
	svlcx
.L968:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   902  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   903  	uint8 ui8_Obj;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   904  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   905  	CAN_MSIMASK = ui32_MSIMASK_Value[0U];
	movh.a	a15,#@his(ui32_MSIMASK_Value)
	lea	a15,[a15]@los(ui32_MSIMASK_Value)
.L969:
	movh.a	a14,#61440
	lea	a14,[a14]@los(0xf00041c0)
.L970:
	ld.w	d15,[a15]
.L971:
	st.w	[a14],d15
.L972:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   906  	while (CAN_MSID0 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004180)
.L973:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   907  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   908  		ui8_Obj = (32U * 0U)+ CAN_MSID0;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   909  		CAN_Rx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   910  		CAN_MSPND0 =  ~(1 << CAN_MSID0); // reset PND bit
	movh.a	a13,#61440
.L974:
	j	.L121
.L122:
	ld.w	d15,[a12]
.L975:
	extr.u	d4,d15,#0,#8
.L399:
	call	CAN_Rx_Interrupt
.L400:
	mov	d15,#1
	ld.w	d8,[a12]
.L976:
	sha	d15,d15,d8
.L977:
	mov	d8,#-1
.L978:
	xor	d15,d8
	st.w	[a13]@los(0xf0004140),d15
.L121:
	mov	d15,#32
	ld.w	d8,[a12]
.L979:
	jne	d15,d8,.L122				; predicted taken
.L980:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   911  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   912  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   913  	CAN_MSIMASK = ui32_MSIMASK_Value[1U];
	ld.w	d15,[a15]4
.L981:
	st.w	[a14],d15
.L982:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   914  	while (CAN_MSID1 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004184)
.L983:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   915  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   916  		ui8_Obj = (32U * 1U)+ CAN_MSID1;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   917  		CAN_Rx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   918  		CAN_MSPND1 =  ~(1 << CAN_MSID1); // reset PND bit
	movh.a	a13,#61440
.L984:
	j	.L123
.L124:
	ld.w	d15,[a12]
.L985:
	add	d15,d15,#32
	extr.u	d4,d15,#0,#8
.L401:
	call	CAN_Rx_Interrupt
.L402:
	mov	d15,#1
	ld.w	d8,[a12]
.L986:
	sha	d15,d15,d8
.L987:
	mov	d8,#-1
.L988:
	xor	d15,d8
	st.w	[a13]@los(0xf0004144),d15
.L123:
	mov	d15,#32
	ld.w	d8,[a12]
.L989:
	jne	d15,d8,.L124				; predicted taken
.L990:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   919  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   920  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   921  	CAN_MSIMASK = ui32_MSIMASK_Value[2U];
	ld.w	d15,[a15]8
.L991:
	st.w	[a14],d15
.L992:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   922  	while (CAN_MSID2 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004188)
.L993:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   923  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   924  		ui8_Obj = (32U * 2U)+ CAN_MSID2;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   925  		CAN_Rx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   926  		CAN_MSPND2 =  ~(1 << CAN_MSID2); // reset PND bit
	movh.a	a13,#61440
.L994:
	j	.L125
.L126:
	ld.w	d15,[a12]
.L995:
	add	d15,d15,#64
	extr.u	d4,d15,#0,#8
.L403:
	call	CAN_Rx_Interrupt
.L404:
	mov	d15,#1
	ld.w	d8,[a12]
.L996:
	sha	d15,d15,d8
.L997:
	mov	d8,#-1
.L998:
	xor	d15,d8
	st.w	[a13]@los(0xf0004148),d15
.L125:
	mov	d15,#32
	ld.w	d8,[a12]
.L999:
	jne	d15,d8,.L126				; predicted taken
.L1000:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   927  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   928  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   929  	CAN_MSIMASK = ui32_MSIMASK_Value[3U];
	ld.w	d15,[a15]12
.L1001:
	st.w	[a14],d15
.L1002:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   930  	while (CAN_MSID3 != 0x00000020)
	movh.a	a15,#61440
	lea	a15,[a15]@los(0xf000418c)
.L1003:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   931  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   932  		ui8_Obj = (32U * 3U)+ CAN_MSID3;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   933  		CAN_Rx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   934  		CAN_MSPND3 =  ~(1 << CAN_MSID3); // reset PND bit
	movh.a	a12,#61440
.L1004:
	j	.L127
.L128:
	ld.w	d15,[a15]
.L1005:
	add	d15,d15,#96
	extr.u	d4,d15,#0,#8
.L405:
	call	CAN_Rx_Interrupt
.L406:
	mov	d15,#1
	ld.w	d8,[a15]
.L1006:
	sha	d15,d15,d8
.L1007:
	mov	d8,#-1
.L1008:
	xor	d15,d8
	st.w	[a12]@los(0xf000414c),d15
.L127:
	mov	d15,#32
	ld.w	d8,[a15]
.L1009:
	jne	d15,d8,.L128				; predicted taken
.L1010:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   935  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   936  } //  End of function CAN_viSRN0
	rslcx
	rfe
.L359:
	
__CAN_viSRN0_function_end:
	.size	CAN_viSRN0,__CAN_viSRN0_function_end-CAN_viSRN0
.L272:
	; End of function
	
	.sdecl	'.text.intvec.002',code
	.sect	'.text.intvec.002'

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   937  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   938  void INTERRUPT (CAN_SRN1INT) CAN_viSRN1(void)
	movh.a	a14,#@his(CAN_viSRN1)
	lea	a14,[a14]@los(CAN_viSRN1)
	ji	a14
	.sdecl	'.text.CanDrv_TC1782.CAN_viSRN1',code,cluster('CAN_viSRN1')
	.sect	'.text.CanDrv_TC1782.CAN_viSRN1'
	.align	2
	
	.global	CAN_viSRN1
; Function CAN_viSRN1
.L174:
CAN_viSRN1:	.type	func
	svlcx
.L1015:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   939  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   940  	uint8 ui8_Obj;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   941  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   942  	CAN_MSIMASK = ui32_MSIMASK_Value[0U];
	movh.a	a15,#@his(ui32_MSIMASK_Value)
	lea	a15,[a15]@los(ui32_MSIMASK_Value)
.L1016:
	movh.a	a14,#61440
	lea	a14,[a14]@los(0xf00041c0)
.L1017:
	ld.w	d15,[a15]
.L1018:
	st.w	[a14],d15
.L1019:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   943  	while (CAN_MSID0 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004180)
.L1020:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   944  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   945  		ui8_Obj = (32U * 0U)+ CAN_MSID0;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   946  		CAN_Tx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   947  		CAN_MSPND0 =  ~(1 << CAN_MSID0); // reset PND bit
	movh.a	a13,#61440
.L1021:
	j	.L129
.L130:
	ld.w	d15,[a12]
.L1022:
	extr.u	d4,d15,#0,#8
.L407:
	call	CAN_Tx_Interrupt
.L408:
	mov	d15,#1
	ld.w	d8,[a12]
.L1023:
	sha	d15,d15,d8
.L1024:
	mov	d8,#-1
.L1025:
	xor	d15,d8
	st.w	[a13]@los(0xf0004140),d15
.L129:
	mov	d15,#32
	ld.w	d8,[a12]
.L1026:
	jne	d15,d8,.L130				; predicted taken
.L1027:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   948  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   949  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   950  	CAN_MSIMASK = ui32_MSIMASK_Value[1U];
	ld.w	d15,[a15]4
.L1028:
	st.w	[a14],d15
.L1029:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   951  	while (CAN_MSID1 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004184)
.L1030:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   952  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   953  		ui8_Obj = (32U * 1U)+ CAN_MSID1;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   954  		CAN_Tx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   955  		CAN_MSPND1 =  ~(1 << CAN_MSID1); // reset PND bit
	movh.a	a13,#61440
.L1031:
	j	.L131
.L132:
	ld.w	d15,[a12]
.L1032:
	add	d15,d15,#32
	extr.u	d4,d15,#0,#8
.L409:
	call	CAN_Tx_Interrupt
.L410:
	mov	d15,#1
	ld.w	d8,[a12]
.L1033:
	sha	d15,d15,d8
.L1034:
	mov	d8,#-1
.L1035:
	xor	d15,d8
	st.w	[a13]@los(0xf0004144),d15
.L131:
	mov	d15,#32
	ld.w	d8,[a12]
.L1036:
	jne	d15,d8,.L132				; predicted taken
.L1037:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   956  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   957  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   958  	CAN_MSIMASK = ui32_MSIMASK_Value[2U];
	ld.w	d15,[a15]8
.L1038:
	st.w	[a14],d15
.L1039:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   959  	while (CAN_MSID2 != 0x00000020)
	movh.a	a12,#61440
	lea	a12,[a12]@los(0xf0004188)
.L1040:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   960  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   961  		ui8_Obj = (32U * 2U)+ CAN_MSID2;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   962  		CAN_Tx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   963  		CAN_MSPND2 =  ~(1 << CAN_MSID2); // reset PND bit
	movh.a	a13,#61440
.L1041:
	j	.L133
.L134:
	ld.w	d15,[a12]
.L1042:
	add	d15,d15,#64
	extr.u	d4,d15,#0,#8
.L411:
	call	CAN_Tx_Interrupt
.L412:
	mov	d15,#1
	ld.w	d8,[a12]
.L1043:
	sha	d15,d15,d8
.L1044:
	mov	d8,#-1
.L1045:
	xor	d15,d8
	st.w	[a13]@los(0xf0004148),d15
.L133:
	mov	d15,#32
	ld.w	d8,[a12]
.L1046:
	jne	d15,d8,.L134				; predicted taken
.L1047:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   964  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   965  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   966  	CAN_MSIMASK = ui32_MSIMASK_Value[3U];
	ld.w	d15,[a15]12
.L1048:
	st.w	[a14],d15
.L1049:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   967  	while (CAN_MSID3 != 0x00000020)
	movh.a	a15,#61440
	lea	a15,[a15]@los(0xf000418c)
.L1050:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   968  	{
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   969  		ui8_Obj = (32U * 3U)+ CAN_MSID3;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   970  		CAN_Tx_Interrupt(ui8_Obj);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   971  		CAN_MSPND3 =  ~(1 << CAN_MSID3); // reset PND bit
	movh.a	a12,#61440
.L1051:
	j	.L135
.L136:
	ld.w	d15,[a15]
.L1052:
	add	d15,d15,#96
	extr.u	d4,d15,#0,#8
.L413:
	call	CAN_Tx_Interrupt
.L414:
	mov	d15,#1
	ld.w	d8,[a15]
.L1053:
	sha	d15,d15,d8
.L1054:
	mov	d8,#-1
.L1055:
	xor	d15,d8
	st.w	[a12]@los(0xf000414c),d15
.L135:
	mov	d15,#32
	ld.w	d8,[a15]
.L1056:
	jne	d15,d8,.L136				; predicted taken
.L1057:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   972  	}
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   973  } //  End of function CAN_viSRN1
	rslcx
	rfe
.L361:
	
__CAN_viSRN1_function_end:
	.size	CAN_viSRN1,__CAN_viSRN1_function_end-CAN_viSRN1
.L277:
	; End of function
	
	.sdecl	'.text.intvec.003',code
	.sect	'.text.intvec.003'

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   974  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   975  void INTERRUPT (CAN_SRN2INT) CAN_viSRN2(void)
	movh.a	a14,#@his(CAN_viSRN2)
	lea	a14,[a14]@los(CAN_viSRN2)
	ji	a14
	.sdecl	'.text.CanDrv_TC1782.CAN_viSRN2',code,cluster('CAN_viSRN2')
	.sect	'.text.CanDrv_TC1782.CAN_viSRN2'
	.align	2
	
	.global	CAN_viSRN2
; Function CAN_viSRN2
.L176:
CAN_viSRN2:	.type	func
	svlcx
.L1062:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   976  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   977  	CAN_Read_Error();
	call	CAN_Read_Error
.L1063:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   978  	CAN_BusOff_Clear(0);
	mov	d4,#0
	call	CAN_BusOff_Clear
.L1064:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   979  } //  End of function CAN_viSRN2
	rslcx
	rfe
.L363:
	
__CAN_viSRN2_function_end:
	.size	CAN_viSRN2,__CAN_viSRN2_function_end-CAN_viSRN2
.L282:
	; End of function
	
	.sdecl	'.text.CanDrv_TC1782.CAN_ubRequestMsgObj',code,cluster('CAN_ubRequestMsgObj')
	.sect	'.text.CanDrv_TC1782.CAN_ubRequestMsgObj'
	.align	2
	
	.global	CAN_ubRequestMsgObj

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   980  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   981  uint8 CAN_ubRequestMsgObj(uint8 ubObjNr)
; Function CAN_ubRequestMsgObj
.L178:
CAN_ubRequestMsgObj:	.type	func

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   982  {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   983    uint8 ubReturn;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   984  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   985    ubReturn = 0;
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   986    if((CAN_HWOBJ[ubObjNr].uwMOCTR & 0x00000100) == 0x00000000)  // if reset TXRQ
	sha	d4,#5
	movh.a	a15,#61440
.L415:
	lea	a15,[a15]@los(0xf0005000)
.L832:
	addsc.a	a15,a15,d4,#0
.L833:
	mov	d2,#0
	ld.w	d15,[+a15]28
.L416:
	jnz.t	d15:8,.L137				; predicted not taken
.L834:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   987    {
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   988      CAN_HWOBJ[ubObjNr].uwMOCTR = 0x00000020;                   // reset MSGVAL
	mov	d15,#32
	st.w	[a15],d15
.L835:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   989      ubReturn = 1;
	mov	d2,#1
.L137:

; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   990    }
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   991    return(ubReturn);
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   992  
; ..\Communication_Files\CanDrv\CanDrv_TC1782.c	   993  }
	ret
.L336:
	
__CAN_ubRequestMsgObj_function_end:
	.size	CAN_ubRequestMsgObj,__CAN_ubRequestMsgObj_function_end-CAN_ubRequestMsgObj
.L237:
	; End of function
	
	.sdecl	'.bss.CanDrv_TC1782.st_CAN_Error',data,cluster('st_CAN_Error')
	.sect	'.bss.CanDrv_TC1782.st_CAN_Error'
	.global	st_CAN_Error
	.align	4
st_CAN_Error:	.type	object
	.size	st_CAN_Error,36
	.space	36
	.sdecl	'.bss.CanDrv_TC1782.ui32_BOFF_Delay_Count',data,cluster('ui32_BOFF_Delay_Count')
	.sect	'.bss.CanDrv_TC1782.ui32_BOFF_Delay_Count'
	.global	ui32_BOFF_Delay_Count
	.align	2
ui32_BOFF_Delay_Count:	.type	object
	.size	ui32_BOFF_Delay_Count,12
	.space	12
	.sdecl	'.bss.CanDrv_TC1782.ui32_BOFF_Clear_Count',data,cluster('ui32_BOFF_Clear_Count')
	.sect	'.bss.CanDrv_TC1782.ui32_BOFF_Clear_Count'
	.global	ui32_BOFF_Clear_Count
	.align	2
ui32_BOFF_Clear_Count:	.type	object
	.size	ui32_BOFF_Clear_Count,12
	.space	12
	.sdecl	'.bss.CanDrv_TC1782.ui8_CallCycle_Count',data,cluster('ui8_CallCycle_Count')
	.sect	'.bss.CanDrv_TC1782.ui8_CallCycle_Count'
	.global	ui8_CallCycle_Count
ui8_CallCycle_Count:	.type	object
	.size	ui8_CallCycle_Count,128
	.space	128
	.sdecl	'.bss.CanDrv_TC1782.ui32_MSIMASK_Value',data,cluster('ui32_MSIMASK_Value')
	.sect	'.bss.CanDrv_TC1782.ui32_MSIMASK_Value'
	.global	ui32_MSIMASK_Value
	.align	2
ui32_MSIMASK_Value:	.type	object
	.size	ui32_MSIMASK_Value,16
	.space	16
	.calls	'CAN_Init','__rt_udivmod'
	.calls	'CAN_Init','MAIN_vWriteWDTCON0'
	.calls	'CAN_Init','CAN_Error_Clear'
	.calls	'CAN_Read','CANOBJ_Read'
	.calls	'CAN_Read_Error','CAN_Error_Callback'
	.calls	'CAN_BusOff_Deal','CAN_Read_BusOff'
	.calls	'CAN_BusOff_Deal','CAN_BusOff_Clear'
	.calls	'CAN_Rx_Interrupt','CAN_Rx_Interrupt_Callback'
	.calls	'CAN_Tx_Interrupt','CAN_Tx_Interrupt_Callback'
	.calls	'CAN_viSRN0','CAN_Rx_Interrupt'
	.calls	'CAN_viSRN1','CAN_Tx_Interrupt'
	.calls	'CAN_viSRN2','CAN_Read_Error'
	.calls	'CAN_viSRN2','CAN_BusOff_Clear'
	.calls	'CAN_Init','',8
	.calls	'CAN_Read_By_ID','',0
	.calls	'CANOBJ_Read','',0
	.calls	'CAN_Read','',0
	.calls	'CAN_Write','',0
	.calls	'CAN_MOs_TXPND_Reset','',0
	.calls	'CAN_MOs_Transmit_Status','',0
	.calls	'CAN_MOs_Get_DLC','',0
	.calls	'CAN_Set_ID','',0
	.calls	'CAN_Read_Error','',0
	.calls	'CAN_Error_Clear','',0
	.calls	'CAN_Read_BusOff','',0
	.calls	'CAN_BusOff_Clear','',0
	.calls	'CAN_BusOff_Deal','',0
	.calls	'CAN_Rx_Interrupt','',0
	.calls	'CAN_Tx_Interrupt','',0
	.calls	'CAN_viSRN0','',0
	.calls	'CAN_viSRN1','',0
	.calls	'CAN_viSRN2','',0
	.extern	Boot_Flag
	.extern	MAIN_vWriteWDTCON0
	.extern	Update_Count
	.extern	st_CAN_Node
	.extern	st_CAN_Object
	.extern	st_CAN_Rx_By_ID
	.extern	CAN_Error_Callback
	.extern	CAN_Rx_Interrupt_Callback
	.extern	CAN_Tx_Interrupt_Callback
	.extern	__rt_udivmod
	.calls	'CAN_ubRequestMsgObj','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L180:
	.word	1571
	.half	3
	.word	.L181
	.byte	4
.L179:
	.byte	1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L182
	.byte	2
	.byte	'__nop',0,1,1,1,1,3
	.byte	'MAIN_vWriteWDTCON0',0,1,148,1,6,1,1,1,1,4
	.byte	'unsigned int',0,4,7,5
	.byte	'uwValue',0,1,148,1,31
	.word	199
	.byte	0
.L302:
	.byte	4
	.byte	'unsigned long int',0,4,7
.L294:
	.byte	6
	.word	233
.L300:
	.byte	4
	.byte	'unsigned char',0,1,8
.L296:
	.byte	6
	.word	259
.L298:
	.byte	6
	.word	259
.L304:
	.byte	7
	.word	259
.L306:
	.byte	4
	.byte	'unsigned short int',0,2,7
.L312:
	.byte	7
	.word	233
	.byte	3
	.byte	'CAN_Error_Callback',0,2,32,13,1,1,1,1,5
	.byte	'ui8_Node',0,2,32,38
	.word	259
	.byte	0,3
	.byte	'CAN_Rx_Interrupt_Callback',0,2,51,13,1,1,1,1,5
	.byte	'ui8_Obj',0,2,51,45
	.word	259
	.byte	0,3
	.byte	'CAN_Tx_Interrupt_Callback',0,2,70,13,1,1,1,1,5
	.byte	'ui8_Obj',0,2,70,45
	.word	259
	.byte	0,8
	.byte	'void',0,7
	.word	465
	.byte	9
	.byte	'__prof_adm',0,3,1,1
	.word	471
	.byte	10,1,7
	.word	495
	.byte	9
	.byte	'__codeptr',0,3,1,1
	.word	497
	.byte	11,128,2
	.word	259
	.byte	12,255,1,0,13
	.byte	'Boot_Flag',0,1,43,22
	.word	520
	.byte	1,1,9
	.byte	'ubyte',0,1,78,24
	.word	259
	.byte	9
	.byte	'ushort',0,1,80,24
	.word	291
	.byte	9
	.byte	'uword',0,1,82,24
	.word	199
	.byte	9
	.byte	'uint8',0,4,87,29
	.word	259
	.byte	9
	.byte	'uint16',0,4,89,29
	.word	291
	.byte	4
	.byte	'long int',0,4,5,9
	.byte	'sint32',0,4,90,29
	.word	623
	.byte	9
	.byte	'uint32',0,4,91,27
	.word	233
	.byte	9
	.byte	'boolean',0,4,102,29
	.word	259
	.byte	13
	.byte	'Update_Count',0,5,12,15
	.word	233
	.byte	1,1,14,6,36,9,20,15
	.byte	'b_Enable',0,1
	.word	259
	.byte	2,35,0,15
	.byte	'ui32_CAN_Clock',0,4
	.word	233
	.byte	2,35,2,15
	.byte	'ui32_BaudRate',0,4
	.word	233
	.byte	2,35,6,15
	.byte	'ui8_TSEG1',0,1
	.word	259
	.byte	2,35,10,15
	.byte	'ui8_TSEG2',0,1
	.word	259
	.byte	2,35,11,15
	.byte	'ui8_SJW',0,1
	.word	259
	.byte	2,35,12,15
	.byte	'ui32_BOFF_Dealy',0,4
	.word	233
	.byte	2,35,14,0,9
	.byte	'Struct_CAN_Node',0,6,45,2
	.word	704
	.byte	11,60
	.word	704
	.byte	12,2,0,13
	.byte	'st_CAN_Node',0,6,46,25
	.word	879
	.byte	1,1,14,6,48,9,20,15
	.byte	'b_Enable',0,1
	.word	259
	.byte	2,35,0,15
	.byte	'ui8_Node',0,1
	.word	259
	.byte	2,35,1,15
	.byte	'b_Dir',0,1
	.word	259
	.byte	2,35,2,15
	.byte	'b_RxIRQ',0,1
	.word	259
	.byte	2,35,3,15
	.byte	'b_TxIRQ',0,1
	.word	259
	.byte	2,35,4,15
	.byte	'ui8_DLC',0,1
	.word	259
	.byte	2,35,5,15
	.byte	'b_IDE',0,1
	.word	259
	.byte	2,35,6,15
	.byte	'ui32_ID',0,4
	.word	233
	.byte	2,35,8,15
	.byte	'ui32_Mask',0,4
	.word	233
	.byte	2,35,12,15
	.byte	'ui8_CallCycle',0,1
	.word	259
	.byte	2,35,16,0,9
	.byte	'Struct_CAN_Object',0,6,60,2
	.word	910
	.byte	11,128,20
	.word	910
	.byte	12,127,0,16
	.word	1118
	.byte	13
	.byte	'st_CAN_Object',0,6,61,32
	.word	1128
	.byte	1,1,14,6,63,9,16,15
	.byte	'b_Enable',0,1
	.word	259
	.byte	2,35,0,15
	.byte	'ui32_ID',0,4
	.word	233
	.byte	2,35,2,15
	.byte	'b_Empty',0,1
	.word	259
	.byte	2,35,6,11,8
	.word	259
	.byte	12,7,0,15
	.byte	'ui8_Data',0,8
	.word	1214
	.byte	2,35,7,0,9
	.byte	'Struct_CAN_Rx_By_ID',0,6,69,2
	.word	1157
	.byte	11,128,15
	.word	1157
	.byte	12,119,0,13
	.byte	'st_CAN_Rx_By_ID',0,6,70,28
	.word	1270
	.byte	1,1,14,7,85,9,12,15
	.byte	'b_BOFF',0,1
	.word	259
	.byte	2,35,0,15
	.byte	'b_EWRN',0,1
	.word	259
	.byte	2,35,1,15
	.byte	'b_LLE',0,1
	.word	259
	.byte	2,35,2,15
	.byte	'b_LOE',0,1
	.word	259
	.byte	2,35,3,15
	.byte	'b_INIT',0,1
	.word	259
	.byte	2,35,4,15
	.byte	'b_Stuff',0,1
	.word	259
	.byte	2,35,5,15
	.byte	'b_Form',0,1
	.word	259
	.byte	2,35,6,15
	.byte	'b_Ack',0,1
	.word	259
	.byte	2,35,7,15
	.byte	'b_Bit1',0,1
	.word	259
	.byte	2,35,8,15
	.byte	'b_Bit0_BOFF',0,1
	.word	259
	.byte	2,35,9,15
	.byte	'b_Bit0_Trans',0,1
	.word	259
	.byte	2,35,10,15
	.byte	'b_CRC',0,1
	.word	259
	.byte	2,35,11,0,9
	.byte	'Struct_CAN_Error',0,7,100,2
	.word	1306
.L364:
	.byte	11,36
	.word	1306
	.byte	12,2,0
.L365:
	.byte	11,12
	.word	233
	.byte	12,2,0
.L366:
	.byte	11,128,1
	.word	259
	.byte	12,127,0
.L367:
	.byte	11,16
	.word	233
	.byte	12,3,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L181:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,0,3,8,54,15,39,12,63,12,60,12,0,0,3,46,1,3,8,58,15
	.byte	59,15,57,15,54,15,39,12,63,12,60,12,0,0,4,36,0,3,8,11,15,62,15,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0
	.byte	0,6,53,0,73,19,0,0,7,15,0,73,19,0,0,8,59,0,3,8,0,0,9,22,0,3,8,58,15,59,15,57,15,73,19,0,0,10,21,0,54,15
	.byte	0,0,11,1,1,11,15,73,19,0,0,12,33,0,47,15,0,0,13,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,14,19
	.byte	1,58,15,59,15,57,15,11,15,0,0,15,13,0,3,8,11,15,73,19,56,9,0,0,16,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L182:
	.word	.L418-.L417
.L417:
	.half	3
	.word	.L420-.L419
.L419:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Initiate_Files',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Communication_Files\\CanDrv',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Stand_Header',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Complex_Files',0,0
	.byte	'MAIN.h',0,1,0,0
	.byte	'CanDrv_TC1782_Callback.h',0,2,0,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0
	.byte	'Platform_Types.h',0,3,0,0
	.byte	'Operating_System.h',0,4,0,0
	.byte	'CanDrv_TC1782_User.h',0,2,0,0
	.byte	'CanDrv_TC1782.h',0,2,0,0,0
.L420:
.L418:
	.sdecl	'.debug_info',debug,cluster('CAN_Init')
	.sect	'.debug_info'
.L183:
	.word	277
	.half	3
	.word	.L184
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L186,.L185
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Init',0,1,66,6,1,1,1
	.word	.L140,.L293,.L139
	.byte	4
	.word	.L140,.L293
	.byte	5
	.byte	'ui32_Temp',0,1,68,18
	.word	.L294,.L295
	.byte	5
	.byte	'ui8_Node_Loop',0,1,69,17
	.word	.L296,.L297
	.byte	5
	.byte	'ui8_MO_Loop',0,1,70,17
	.word	.L298,.L299
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Init')
	.sect	'.debug_abbrev'
.L184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Init')
	.sect	'.debug_line'
.L185:
	.word	.L422-.L421
.L421:
	.half	3
	.word	.L424-.L423
.L423:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L424:
	.byte	5,2,7,0,5,2
	.word	.L140
	.byte	3,199,0,1,5,6,9
	.half	.L425-.L140
	.byte	3,122,1,5,2,9
	.half	.L368-.L425
	.byte	3,6,1,5,20,9
	.half	.L426-.L368
	.byte	3,1,1,5,2,1,5,19,9
	.half	.L427-.L426
	.byte	3,2,1,5,17,3,126,1,5,20,9
	.half	.L428-.L427
	.byte	3,1,1,5,17,9
	.half	.L429-.L428
	.byte	1,5,44,9
	.half	.L430-.L429
	.byte	3,1,1,5,8,9
	.half	.L4-.L430
	.byte	3,2,1,5,9,9
	.half	.L3-.L4
	.byte	3,126,1,5,44,9
	.half	.L431-.L3
	.byte	1,5,2,7,9
	.half	.L432-.L431
	.byte	3,4,1,5,20,9
	.half	.L433-.L432
	.byte	1,5,17,1,5,20,9
	.half	.L434-.L433
	.byte	3,1,1,5,17,9
	.half	.L435-.L434
	.byte	1,5,2,9
	.half	.L436-.L435
	.byte	3,1,1,5,8,9
	.half	.L437-.L436
	.byte	3,2,1,5,36,9
	.half	.L438-.L437
	.byte	1,5,8,9
	.half	.L6-.L438
	.byte	3,2,1,9
	.half	.L5-.L6
	.byte	3,126,1,5,36,9
	.half	.L439-.L5
	.byte	1,5,2,7,9
	.half	.L440-.L439
	.byte	3,5,1,5,17,9
	.half	.L441-.L440
	.byte	1,9
	.half	.L442-.L441
	.byte	3,1,1,5,22,9
	.half	.L443-.L442
	.byte	3,4,1,5,20,1,5,6,9
	.half	.L444-.L443
	.byte	3,2,1,5,54,9
	.half	.L445-.L444
	.byte	3,126,1,5,18,9
	.half	.L8-.L445
	.byte	3,2,1,5,17,9
	.half	.L446-.L8
	.byte	1,5,32,9
	.half	.L447-.L446
	.byte	1,5,3,9
	.half	.L448-.L447
	.byte	1,5,4,7,9
	.half	.L449-.L448
	.byte	3,3,1,5,31,9
	.half	.L450-.L449
	.byte	1,5,34,9
	.half	.L451-.L450
	.byte	1,5,31,1,5,4,9
	.half	.L452-.L451
	.byte	3,1,1,5,32,9
	.half	.L453-.L452
	.byte	1,5,4,9
	.half	.L454-.L453
	.byte	3,2,1,5,32,3,126,1,5,4,9
	.half	.L455-.L454
	.byte	3,2,1,5,33,9
	.half	.L456-.L455
	.byte	1,5,36,9
	.half	.L457-.L456
	.byte	1,5,33,1,5,11,9
	.half	.L458-.L457
	.byte	3,2,1,5,10,9
	.half	.L459-.L458
	.byte	3,2,1,7,9
	.half	.L460-.L459
	.byte	3,10,1,7,9
	.half	.L461-.L460
	.byte	3,8,1,7,9
	.half	.L462-.L461
	.byte	1,5,6,9
	.half	.L10-.L462
	.byte	3,112,1,5,34,9
	.half	.L463-.L10
	.byte	1,5,24,9
	.half	.L464-.L463
	.byte	3,1,1,5,49,9
	.half	.L465-.L464
	.byte	1,5,21,1,5,24,9
	.half	.L466-.L465
	.byte	3,1,1,5,49,9
	.half	.L467-.L466
	.byte	1,5,21,1,5,6,9
	.half	.L468-.L467
	.byte	3,2,1,9
	.half	.L469-.L468
	.byte	3,1,1,9
	.half	.L11-.L469
	.byte	3,5,1,5,34,9
	.half	.L470-.L11
	.byte	1,5,24,9
	.half	.L471-.L470
	.byte	3,1,1,5,49,9
	.half	.L472-.L471
	.byte	1,5,21,1,5,51,9
	.half	.L473-.L472
	.byte	3,1,1,5,24,1,5,34,9
	.half	.L474-.L473
	.byte	1,5,49,9
	.half	.L475-.L474
	.byte	1,5,6,9
	.half	.L476-.L475
	.byte	3,1,1,9
	.half	.L12-.L476
	.byte	3,5,1,5,34,9
	.half	.L477-.L12
	.byte	1,5,24,9
	.half	.L478-.L477
	.byte	3,1,1,5,48,9
	.half	.L479-.L478
	.byte	1,5,21,1,5,24,9
	.half	.L480-.L479
	.byte	3,1,1,5,48,9
	.half	.L481-.L480
	.byte	1,5,21,9
	.half	.L15-.L481
	.byte	1,5,13,9
	.half	.L13-.L15
	.byte	3,9,1,5,22,9
	.half	.L482-.L13
	.byte	1,5,11,9
	.half	.L483-.L482
	.byte	3,2,1,7,9
	.half	.L484-.L483
	.byte	3,3,1,7,9
	.half	.L485-.L484
	.byte	3,3,1,7,9
	.half	.L486-.L485
	.byte	1,5,19,9
	.half	.L17-.L486
	.byte	3,126,1,5,18,9
	.half	.L487-.L17
	.byte	1,5,56,9
	.half	.L488-.L487
	.byte	1,5,7,9
	.half	.L489-.L488
	.byte	3,1,1,5,19,9
	.half	.L18-.L489
	.byte	3,2,1,5,18,9
	.half	.L490-.L18
	.byte	1,5,56,9
	.half	.L491-.L490
	.byte	1,5,7,9
	.half	.L492-.L491
	.byte	3,1,1,5,19,9
	.half	.L20-.L492
	.byte	3,2,1,5,18,9
	.half	.L493-.L20
	.byte	1,5,56,9
	.half	.L494-.L493
	.byte	1,5,53,9
	.half	.L22-.L494
	.byte	1,5,73,9
	.half	.L495-.L22
	.byte	3,5,1,5,72,9
	.half	.L496-.L495
	.byte	1,5,60,9
	.half	.L497-.L496
	.byte	3,1,1,5,59,9
	.half	.L498-.L497
	.byte	1,5,87,3,127,1,5,59,9
	.half	.L499-.L498
	.byte	3,1,1,5,21,9
	.half	.L500-.L499
	.byte	1,5,20,9
	.half	.L501-.L500
	.byte	1,5,74,1,5,20,9
	.half	.L502-.L501
	.byte	1,5,35,9
	.half	.L503-.L502
	.byte	1,5,46,9
	.half	.L504-.L503
	.byte	1,5,85,9
	.half	.L505-.L504
	.byte	1,5,29,3,127,1,5,28,9
	.half	.L506-.L505
	.byte	1,5,43,9
	.half	.L507-.L506
	.byte	1,5,59,9
	.half	.L508-.L507
	.byte	1,5,6,9
	.half	.L509-.L508
	.byte	3,1,1,5,92,9
	.half	.L510-.L509
	.byte	1,5,14,3,127,1,5,38,9
	.half	.L511-.L510
	.byte	3,2,1,5,37,9
	.half	.L512-.L511
	.byte	1,5,4,1,5,37,9
	.half	.L513-.L512
	.byte	1,5,52,9
	.half	.L514-.L513
	.byte	1,5,61,9
	.half	.L515-.L514
	.byte	1,5,67,9
	.half	.L516-.L515
	.byte	1,5,14,9
	.half	.L517-.L516
	.byte	1,5,46,9
	.half	.L518-.L517
	.byte	3,1,1,5,45,9
	.half	.L519-.L518
	.byte	1,5,4,1,5,45,9
	.half	.L520-.L519
	.byte	1,5,60,9
	.half	.L521-.L520
	.byte	1,5,71,9
	.half	.L522-.L521
	.byte	1,5,26,9
	.half	.L523-.L522
	.byte	1,5,78,9
	.half	.L524-.L523
	.byte	1,5,14,9
	.half	.L525-.L524
	.byte	1,5,46,9
	.half	.L526-.L525
	.byte	3,1,1,5,45,9
	.half	.L527-.L526
	.byte	1,5,4,1,5,45,9
	.half	.L528-.L527
	.byte	1,5,60,9
	.half	.L529-.L528
	.byte	1,5,71,9
	.half	.L530-.L529
	.byte	1,5,26,9
	.half	.L531-.L530
	.byte	1,5,78,9
	.half	.L532-.L531
	.byte	1,5,14,9
	.half	.L533-.L532
	.byte	1,5,4,9
	.half	.L534-.L533
	.byte	3,1,1,5,32,9
	.half	.L535-.L534
	.byte	1,5,4,9
	.half	.L536-.L535
	.byte	3,2,1,5,35,3,126,1,5,32,9
	.half	.L537-.L536
	.byte	1,5,4,9
	.half	.L538-.L537
	.byte	3,2,1,5,32,9
	.half	.L539-.L538
	.byte	1,5,56,9
	.half	.L9-.L539
	.byte	3,189,127,1,5,69,9
	.half	.L540-.L9
	.byte	1,5,54,9
	.half	.L541-.L540
	.byte	1,5,27,7,9
	.half	.L542-.L541
	.byte	3,200,0,1,5,2,1,5,25,9
	.half	.L543-.L542
	.byte	1,9
	.half	.L544-.L543
	.byte	3,1,1,9
	.half	.L545-.L544
	.byte	3,1,1,9
	.half	.L546-.L545
	.byte	3,1,1,5,18,9
	.half	.L547-.L546
	.byte	3,1,1,5,6,9
	.half	.L548-.L547
	.byte	3,2,1,5,52,9
	.half	.L549-.L548
	.byte	3,126,1,5,20,9
	.half	.L24-.L549
	.byte	3,2,1,5,19,9
	.half	.L550-.L24
	.byte	1,5,32,9
	.half	.L551-.L550
	.byte	1,5,3,9
	.half	.L552-.L551
	.byte	1,5,47,7,9
	.half	.L553-.L552
	.byte	3,2,1,5,46,9
	.half	.L554-.L553
	.byte	1,5,59,9
	.half	.L555-.L554
	.byte	1,5,69,9
	.half	.L556-.L555
	.byte	1,5,25,9
	.half	.L557-.L556
	.byte	1,5,16,9
	.half	.L558-.L557
	.byte	1,5,14,1,5,25,9
	.half	.L559-.L558
	.byte	3,1,1,5,17,9
	.half	.L560-.L559
	.byte	1,5,4,1,5,14,9
	.half	.L561-.L560
	.byte	1,5,4,9
	.half	.L562-.L561
	.byte	3,1,1,5,14,9
	.half	.L563-.L562
	.byte	1,5,4,9
	.half	.L564-.L563
	.byte	3,1,1,5,5,9
	.half	.L565-.L564
	.byte	3,4,1,5,21,9
	.half	.L566-.L565
	.byte	3,126,1,5,20,9
	.half	.L567-.L566
	.byte	1,5,33,9
	.half	.L568-.L567
	.byte	1,5,4,9
	.half	.L569-.L568
	.byte	1,5,5,7,9
	.half	.L570-.L569
	.byte	3,2,1,5,32,9
	.half	.L571-.L570
	.byte	1,5,35,9
	.half	.L572-.L571
	.byte	1,5,32,1,5,26,9
	.half	.L27-.L572
	.byte	3,2,1,5,25,9
	.half	.L573-.L27
	.byte	1,5,38,9
	.half	.L574-.L573
	.byte	1,5,9,9
	.half	.L575-.L574
	.byte	1,5,5,7,9
	.half	.L576-.L575
	.byte	3,2,1,5,32,9
	.half	.L577-.L576
	.byte	1,5,35,9
	.half	.L578-.L577
	.byte	1,5,32,1,5,10,9
	.half	.L29-.L578
	.byte	3,4,1,5,21,9
	.half	.L28-.L29
	.byte	3,3,1,5,20,9
	.half	.L579-.L28
	.byte	1,5,33,9
	.half	.L580-.L579
	.byte	1,5,4,9
	.half	.L581-.L580
	.byte	1,5,5,7,9
	.half	.L582-.L581
	.byte	3,2,1,5,64,9
	.half	.L583-.L582
	.byte	1,5,5,9
	.half	.L584-.L583
	.byte	1,5,63,9
	.half	.L585-.L584
	.byte	1,5,5,9
	.half	.L586-.L585
	.byte	1,5,76,1,5,32,9
	.half	.L587-.L586
	.byte	1,5,86,9
	.half	.L588-.L587
	.byte	1,5,32,1,5,22,9
	.half	.L589-.L588
	.byte	3,2,1,5,21,9
	.half	.L590-.L589
	.byte	1,5,34,9
	.half	.L591-.L590
	.byte	1,5,5,9
	.half	.L592-.L591
	.byte	1,5,6,7,9
	.half	.L593-.L592
	.byte	3,2,1,5,33,9
	.half	.L594-.L593
	.byte	1,5,25,9
	.half	.L595-.L594
	.byte	3,1,1,5,24,9
	.half	.L596-.L595
	.byte	1,5,47,9
	.half	.L597-.L596
	.byte	1,5,53,1,5,65,9
	.half	.L598-.L597
	.byte	1,5,44,1,5,49,9
	.half	.L599-.L598
	.byte	1,5,44,9
	.half	.L600-.L599
	.byte	1,5,22,9
	.half	.L32-.L600
	.byte	3,3,1,5,21,9
	.half	.L601-.L32
	.byte	1,5,34,9
	.half	.L602-.L601
	.byte	1,5,5,9
	.half	.L603-.L602
	.byte	1,5,6,7,9
	.half	.L604-.L603
	.byte	3,2,1,5,33,9
	.half	.L605-.L604
	.byte	1,5,25,9
	.half	.L606-.L605
	.byte	3,1,1,5,24,9
	.half	.L607-.L606
	.byte	1,5,47,9
	.half	.L608-.L607
	.byte	1,5,53,1,5,65,9
	.half	.L609-.L608
	.byte	1,5,44,1,5,49,9
	.half	.L610-.L609
	.byte	1,5,44,9
	.half	.L611-.L610
	.byte	1,5,4,9
	.half	.L31-.L611
	.byte	3,3,1,5,32,9
	.half	.L612-.L31
	.byte	1,5,21,9
	.half	.L613-.L612
	.byte	3,2,1,5,20,9
	.half	.L614-.L613
	.byte	1,5,33,9
	.half	.L615-.L614
	.byte	1,5,4,9
	.half	.L616-.L615
	.byte	1,5,5,7,9
	.half	.L617-.L616
	.byte	3,2,1,5,32,9
	.half	.L618-.L617
	.byte	1,5,58,9
	.half	.L619-.L618
	.byte	1,5,57,9
	.half	.L620-.L619
	.byte	1,5,70,9
	.half	.L621-.L620
	.byte	1,5,81,9
	.half	.L622-.L621
	.byte	1,5,89,9
	.half	.L623-.L622
	.byte	1,5,32,1,5,5,9
	.half	.L624-.L623
	.byte	3,1,1,5,31,9
	.half	.L625-.L624
	.byte	1,5,57,9
	.half	.L626-.L625
	.byte	1,5,56,9
	.half	.L627-.L626
	.byte	1,5,69,9
	.half	.L628-.L627
	.byte	1,5,78,9
	.half	.L629-.L628
	.byte	1,5,86,9
	.half	.L630-.L629
	.byte	1,5,31,1,5,32,9
	.half	.L631-.L630
	.byte	3,127,1,5,26,9
	.half	.L34-.L631
	.byte	3,3,1,5,25,9
	.half	.L632-.L34
	.byte	1,5,38,9
	.half	.L633-.L632
	.byte	1,5,9,9
	.half	.L634-.L633
	.byte	1,5,5,7,9
	.half	.L635-.L634
	.byte	3,2,1,5,32,9
	.half	.L636-.L635
	.byte	1,5,57,9
	.half	.L637-.L636
	.byte	1,5,56,9
	.half	.L638-.L637
	.byte	1,5,69,9
	.half	.L639-.L638
	.byte	1,5,80,9
	.half	.L640-.L639
	.byte	1,5,32,1,5,5,9
	.half	.L641-.L640
	.byte	3,1,1,5,31,9
	.half	.L642-.L641
	.byte	1,5,56,9
	.half	.L643-.L642
	.byte	1,5,55,9
	.half	.L644-.L643
	.byte	1,5,79,9
	.half	.L645-.L644
	.byte	1,5,68,1,5,77,9
	.half	.L646-.L645
	.byte	1,5,31,1,5,32,9
	.half	.L647-.L646
	.byte	3,127,1,5,10,9
	.half	.L36-.L647
	.byte	3,5,1,5,26,9
	.half	.L35-.L36
	.byte	3,3,1,5,18,9
	.half	.L648-.L35
	.byte	1,5,46,9
	.half	.L649-.L648
	.byte	1,5,14,1,5,26,9
	.half	.L650-.L649
	.byte	3,1,1,5,38,9
	.half	.L651-.L650
	.byte	1,5,4,1,5,47,9
	.half	.L652-.L651
	.byte	1,5,14,9
	.half	.L653-.L652
	.byte	1,5,4,9
	.half	.L654-.L653
	.byte	3,1,1,5,31,9
	.half	.L655-.L654
	.byte	1,5,34,9
	.half	.L656-.L655
	.byte	1,5,44,9
	.half	.L657-.L656
	.byte	1,5,31,1,5,4,9
	.half	.L658-.L657
	.byte	3,1,1,5,31,9
	.half	.L659-.L658
	.byte	1,5,34,9
	.half	.L660-.L659
	.byte	1,5,31,1,5,54,9
	.half	.L25-.L660
	.byte	3,70,1,5,65,9
	.half	.L661-.L25
	.byte	1,5,52,9
	.half	.L662-.L661
	.byte	1,5,20,7,9
	.half	.L663-.L662
	.byte	3,62,1,5,17,1,5,20,9
	.half	.L664-.L663
	.byte	3,1,1,5,17,1,5,20,9
	.half	.L665-.L664
	.byte	3,1,1,5,17,1,5,20,9
	.half	.L666-.L665
	.byte	3,3,1,5,6,9
	.half	.L667-.L666
	.byte	3,243,126,1,5,54,9
	.half	.L668-.L667
	.byte	3,141,1,1,5,18,9
	.half	.L39-.L668
	.byte	3,2,1,5,17,9
	.half	.L669-.L39
	.byte	1,5,32,9
	.half	.L670-.L669
	.byte	1,5,3,9
	.half	.L671-.L670
	.byte	1,5,4,7,9
	.half	.L672-.L671
	.byte	3,3,1,5,31,9
	.half	.L673-.L672
	.byte	1,5,34,9
	.half	.L674-.L673
	.byte	1,5,31,1,5,25,9
	.half	.L40-.L674
	.byte	3,2,1,5,3,9
	.half	.L675-.L40
	.byte	1,5,24,9
	.half	.L676-.L675
	.byte	1,5,54,9
	.half	.L677-.L676
	.byte	1,5,53,9
	.half	.L678-.L677
	.byte	1,5,68,9
	.half	.L679-.L678
	.byte	1,5,40,9
	.half	.L680-.L679
	.byte	1,5,25,9
	.half	.L681-.L680
	.byte	3,1,1,5,3,9
	.half	.L682-.L681
	.byte	1,5,24,9
	.half	.L683-.L682
	.byte	1,5,40,9
	.half	.L684-.L683
	.byte	1,5,23,9
	.half	.L685-.L684
	.byte	3,1,1,5,3,9
	.half	.L686-.L685
	.byte	1,5,22,9
	.half	.L687-.L686
	.byte	1,5,38,9
	.half	.L688-.L687
	.byte	1,5,56,9
	.half	.L689-.L688
	.byte	3,119,1,5,69,9
	.half	.L690-.L689
	.byte	1,5,54,9
	.half	.L691-.L690
	.byte	1,5,17,7,9
	.half	.L692-.L691
	.byte	3,11,1,5,1,7,9
	.half	.L187-.L692
	.byte	3,1,0,1,1
.L422:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Init')
	.sect	'.debug_ranges'
.L186:
	.word	-1,.L140,0,.L187-.L140,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_info'
.L188:
	.word	338
	.half	3
	.word	.L189
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L191,.L190
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Read_By_ID',0,1,143,2,9
	.word	.L300
	.byte	1,1,1
	.word	.L142,.L301,.L141
	.byte	4
	.byte	'ui32_ID',0,1,143,2,31
	.word	.L302,.L303
	.byte	4
	.byte	'TargetAddressPtr',0,1,143,2,47
	.word	.L304,.L305
	.byte	5
	.word	.L142,.L301
	.byte	6
	.byte	'ui16_Loop_1',0,1,145,2,9
	.word	.L306,.L307
	.byte	6
	.byte	'ui8_Loop_2',0,1,146,2,8
	.word	.L300,.L308
	.byte	6
	.byte	'b_Return',0,1,147,2,10
	.word	.L300,.L309
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_abbrev'
.L189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_line'
.L190:
	.word	.L694-.L693
.L693:
	.half	3
	.word	.L696-.L695
.L695:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L696:
	.byte	5,11,7,0,5,2
	.word	.L142
	.byte	3,148,2,1,5,6,3,3,1,5,18,9
	.half	.L697-.L142
	.byte	3,125,1,5,58,3,1,1,5,34,9
	.half	.L41-.L697
	.byte	3,2,1,5,3,9
	.half	.L698-.L41
	.byte	1,5,46,7,9
	.half	.L699-.L698
	.byte	3,2,1,5,4,9
	.half	.L700-.L699
	.byte	1,5,36,7,9
	.half	.L701-.L700
	.byte	3,2,1,5,5,9
	.half	.L702-.L701
	.byte	1,5,43,7,9
	.half	.L703-.L702
	.byte	3,2,1,5,56,9
	.half	.L704-.L703
	.byte	3,1,1,5,70,9
	.half	.L705-.L704
	.byte	3,2,1,5,42,9
	.half	.L706-.L705
	.byte	3,126,1,5,79,9
	.half	.L45-.L706
	.byte	3,2,1,5,40,9
	.half	.L707-.L45
	.byte	1,5,42,9
	.half	.L708-.L707
	.byte	3,126,1,5,15,7,9
	.half	.L709-.L708
	.byte	3,4,1,5,71,9
	.half	.L42-.L709
	.byte	3,115,1,5,58,9
	.half	.L710-.L42
	.byte	1,5,1,7,9
	.half	.L711-.L710
	.byte	3,19,1,7,9
	.half	.L192-.L711
	.byte	0,1,1
.L694:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_ranges'
.L191:
	.word	-1,.L142,0,.L192-.L142,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Read')
	.sect	'.debug_info'
.L193:
	.word	306
	.half	3
	.word	.L194
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L196,.L195
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Read',0,1,221,2,9
	.word	.L300
	.byte	1,1,1
	.word	.L146,.L310,.L145
	.byte	4
	.byte	'ui8_Obj',0,1,221,2,24
	.word	.L300,.L311
	.byte	4
	.byte	'p_ui32_ID',0,1,221,2,41
	.word	.L312,.L313
	.byte	4
	.byte	'TargetAddressPtr',0,1,221,2,59
	.word	.L304,.L314
	.byte	5
	.word	.L146,.L310
	.byte	6
	.byte	'b_Return',0,1,223,2,10
	.word	.L300,.L315
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Read')
	.sect	'.debug_abbrev'
.L194:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Read')
	.sect	'.debug_line'
.L195:
	.word	.L713-.L712
.L712:
	.half	3
	.word	.L715-.L714
.L714:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L715:
	.byte	5,38,7,0,5,2
	.word	.L146
	.byte	3,229,2,1,5,1,9
	.half	.L197-.L146
	.byte	3,8,0,1,1
.L713:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Read')
	.sect	'.debug_ranges'
.L196:
	.word	-1,.L146,0,.L197-.L146,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Write')
	.sect	'.debug_info'
.L198:
	.word	306
	.half	3
	.word	.L199
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L201,.L200
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Write',0,1,133,3,9
	.word	.L300
	.byte	1,1,1
	.word	.L148,.L316,.L147
	.byte	4
	.byte	'ui8_Obj',0,1,133,3,25
	.word	.L300,.L317
	.byte	4
	.byte	'SourceAddressPtr',0,1,133,3,41
	.word	.L304,.L318
	.byte	5
	.word	.L148,.L316
	.byte	6
	.byte	'ui8_Loop',0,1,135,3,8
	.word	.L300,.L319
	.byte	6
	.byte	'b_Return',0,1,136,3,10
	.word	.L300,.L320
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Write')
	.sect	'.debug_abbrev'
.L199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Write')
	.sect	'.debug_line'
.L200:
	.word	.L717-.L716
.L716:
	.half	3
	.word	.L719-.L718
.L718:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L719:
	.byte	5,19,7,0,5,2
	.word	.L148
	.byte	3,138,3,1,5,6,1,5,19,9
	.half	.L720-.L148
	.byte	1,5,11,9
	.half	.L721-.L720
	.byte	3,127,1,5,28,3,1,1,5,9,9
	.half	.L374-.L721
	.byte	3,122,1,5,5,9
	.half	.L375-.L374
	.byte	3,6,1,5,30,7,9
	.half	.L722-.L375
	.byte	3,1,1,5,37,9
	.half	.L723-.L722
	.byte	1,5,30,7,9
	.half	.L724-.L723
	.byte	3,2,1,5,23,1,5,6,9
	.half	.L725-.L724
	.byte	1,5,63,7,9
	.half	.L726-.L725
	.byte	1,5,56,1,5,60,9
	.half	.L727-.L726
	.byte	1,5,5,7,9
	.half	.L728-.L727
	.byte	3,2,1,5,24,9
	.half	.L729-.L728
	.byte	1,5,58,9
	.half	.L730-.L729
	.byte	1,5,34,9
	.half	.L731-.L730
	.byte	1,5,5,9
	.half	.L57-.L731
	.byte	1,5,24,9
	.half	.L732-.L57
	.byte	1,5,25,9
	.half	.L733-.L732
	.byte	3,3,1,5,3,9
	.half	.L734-.L733
	.byte	1,5,32,7,9
	.half	.L735-.L734
	.byte	3,2,1,5,34,9
	.half	.L736-.L735
	.byte	1,5,14,9
	.half	.L59-.L736
	.byte	3,6,1,5,4,1,5,13,9
	.half	.L737-.L59
	.byte	1,5,33,9
	.half	.L738-.L737
	.byte	1,5,22,1,5,31,9
	.half	.L739-.L738
	.byte	1,5,23,9
	.half	.L740-.L739
	.byte	3,3,1,5,36,9
	.half	.L741-.L740
	.byte	3,126,1,5,43,9
	.half	.L61-.L741
	.byte	3,2,1,5,41,9
	.half	.L742-.L61
	.byte	1,5,36,9
	.half	.L743-.L742
	.byte	3,126,1,5,33,7,9
	.half	.L744-.L743
	.byte	3,4,1,5,31,9
	.half	.L745-.L744
	.byte	1,5,33,9
	.half	.L746-.L745
	.byte	3,1,1,5,31,1,5,40,9
	.half	.L747-.L746
	.byte	3,2,1,5,33,1,5,58,9
	.half	.L748-.L747
	.byte	3,2,1,5,7,9
	.half	.L749-.L748
	.byte	3,126,1,5,82,7,9
	.half	.L750-.L749
	.byte	1,5,75,1,5,79,9
	.half	.L751-.L750
	.byte	1,5,72,7,9
	.half	.L752-.L751
	.byte	3,2,1,5,34,1,5,75,9
	.half	.L753-.L752
	.byte	1,5,34,9
	.half	.L62-.L753
	.byte	3,4,1,5,13,9
	.half	.L64-.L62
	.byte	3,3,1,5,2,9
	.half	.L55-.L64
	.byte	3,4,1,5,17,9
	.half	.L376-.L55
	.byte	1,5,15,1,5,1,9
	.half	.L754-.L376
	.byte	3,2,1,7,9
	.half	.L202-.L754
	.byte	0,1,1
.L717:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Write')
	.sect	'.debug_ranges'
.L201:
	.word	-1,.L148,0,.L202-.L148,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_info'
.L203:
	.word	237
	.half	3
	.word	.L204
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L206,.L205
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_MOs_TXPND_Reset',0,1,196,3,6,1,1,1
	.word	.L150,.L321,.L149
	.byte	4
	.byte	'ui8_Obj',0,1,196,3,32
	.word	.L300,.L322
	.byte	5
	.word	.L150,.L321
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_abbrev'
.L204:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_line'
.L205:
	.word	.L756-.L755
.L755:
	.half	3
	.word	.L758-.L757
.L757:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L758:
	.byte	5,2,7,0,5,2
	.word	.L150
	.byte	3,197,3,1,5,27,9
	.half	.L759-.L150
	.byte	1,5,25,1,5,1,9
	.half	.L760-.L759
	.byte	3,1,1,7,9
	.half	.L207-.L760
	.byte	0,1,1
.L756:
	.sdecl	'.debug_ranges',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_ranges'
.L206:
	.word	-1,.L150,0,.L207-.L150,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_info'
.L208:
	.word	268
	.half	3
	.word	.L209
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L211,.L210
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_MOs_Transmit_Status',0,1,217,3,7
	.word	.L300
	.byte	1,1,1
	.word	.L152,.L323,.L151
	.byte	4
	.byte	'ui8_Obj',0,1,217,3,37
	.word	.L300,.L324
	.byte	5
	.word	.L152,.L323
	.byte	6
	.byte	'b_Return',0,1,219,3,8
	.word	.L300,.L325
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_abbrev'
.L209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_line'
.L210:
	.word	.L762-.L761
.L761:
	.half	3
	.word	.L764-.L763
.L763:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L764:
	.byte	5,8,7,0,5,2
	.word	.L152
	.byte	3,222,3,1,5,11,9
	.half	.L765-.L152
	.byte	3,126,1,5,8,3,2,1,5,5,9
	.half	.L379-.L765
	.byte	1,5,31,7,9
	.half	.L766-.L379
	.byte	3,2,1,5,29,1,5,15,9
	.half	.L767-.L766
	.byte	3,1,1,5,1,9
	.half	.L66-.L767
	.byte	3,4,1,7,9
	.half	.L212-.L66
	.byte	0,1,1
.L762:
	.sdecl	'.debug_ranges',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_ranges'
.L211:
	.word	-1,.L152,0,.L212-.L152,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_info'
.L213:
	.word	259
	.half	3
	.word	.L214
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L216,.L215
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_MOs_Get_DLC',0,1,248,3,7
	.word	.L300
	.byte	1,1,1
	.word	.L154,.L326,.L153
	.byte	4
	.byte	'ui8_Obj',0,1,248,3,29
	.word	.L300,.L327
	.byte	5
	.word	.L154,.L326
	.byte	6
	.byte	'ui8_DLC',0,1,250,3,8
	.word	.L300,.L328
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_abbrev'
.L214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_line'
.L215:
	.word	.L769-.L768
.L768:
	.half	3
	.word	.L771-.L770
.L770:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L771:
	.byte	5,13,7,0,5,2
	.word	.L154
	.byte	3,251,3,1,5,36,9
	.half	.L772-.L154
	.byte	1,5,44,9
	.half	.L773-.L772
	.byte	1,5,1,9
	.half	.L381-.L773
	.byte	3,3,1,7,9
	.half	.L217-.L381
	.byte	0,1,1
.L769:
	.sdecl	'.debug_ranges',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_ranges'
.L216:
	.word	-1,.L154,0,.L217-.L154,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Set_ID')
	.sect	'.debug_info'
.L218:
	.word	249
	.half	3
	.word	.L219
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L221,.L220
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Set_ID',0,1,150,4,6,1,1,1
	.word	.L156,.L329,.L155
	.byte	4
	.byte	'ui8_Obj',0,1,150,4,23
	.word	.L300,.L330
	.byte	4
	.byte	'ui32_ID',0,1,150,4,39
	.word	.L302,.L331
	.byte	5
	.word	.L156,.L329
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Set_ID')
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Set_ID')
	.sect	'.debug_line'
.L220:
	.word	.L775-.L774
.L774:
	.half	3
	.word	.L777-.L776
.L776:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L777:
	.byte	5,18,7,0,5,2
	.word	.L156
	.byte	3,151,4,1,5,5,1,5,18,9
	.half	.L778-.L156
	.byte	1,5,27,9
	.half	.L779-.L778
	.byte	1,5,2,9
	.half	.L780-.L779
	.byte	1,5,3,7,9
	.half	.L781-.L780
	.byte	3,2,1,5,45,9
	.half	.L782-.L781
	.byte	1,5,55,9
	.half	.L783-.L782
	.byte	1,5,53,9
	.half	.L784-.L783
	.byte	1,5,25,1,5,1,9
	.half	.L785-.L784
	.byte	3,6,1,5,7,7,9
	.half	.L69-.L785
	.byte	3,124,1,5,3,7,9
	.half	.L786-.L69
	.byte	3,2,1,5,46,9
	.half	.L787-.L786
	.byte	1,5,44,9
	.half	.L788-.L787
	.byte	1,5,25,1,5,1,9
	.half	.L71-.L788
	.byte	3,2,1,7,9
	.half	.L222-.L71
	.byte	0,1,1
.L775:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Set_ID')
	.sect	'.debug_ranges'
.L221:
	.word	-1,.L156,0,.L222-.L156,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_info'
.L223:
	.word	240
	.half	3
	.word	.L224
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L226,.L225
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Error_Clear',0,1,163,5,6,1,1,1
	.word	.L160,.L332,.L159
	.byte	4
	.word	.L160,.L332
	.byte	5
	.byte	'ui8_Node_Loop',0,1,165,5,8
	.word	.L300,.L333
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_abbrev'
.L224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_line'
.L225:
	.word	.L790-.L789
.L789:
	.half	3
	.word	.L792-.L791
.L791:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L792:
	.byte	5,22,7,0,5,2
	.word	.L160
	.byte	3,166,5,1,5,3,3,3,1,5,54,9
	.half	.L793-.L160
	.byte	3,125,1,5,38,9
	.half	.L95-.L793
	.byte	3,4,1,5,37,9
	.half	.L794-.L95
	.byte	3,1,1,9
	.half	.L795-.L794
	.byte	3,1,1,5,38,9
	.half	.L796-.L795
	.byte	3,1,1,5,39,9
	.half	.L797-.L796
	.byte	3,1,1,5,38,9
	.half	.L798-.L797
	.byte	3,1,1,5,37,9
	.half	.L799-.L798
	.byte	3,1,1,5,38,9
	.half	.L800-.L799
	.byte	3,1,1,5,43,9
	.half	.L801-.L800
	.byte	3,1,1,5,44,9
	.half	.L802-.L801
	.byte	3,1,1,5,37,9
	.half	.L803-.L802
	.byte	3,1,1,5,69,9
	.half	.L804-.L803
	.byte	3,114,1,5,54,9
	.half	.L805-.L804
	.byte	1,5,1,7,9
	.half	.L806-.L805
	.byte	3,16,1,7,9
	.half	.L227-.L806
	.byte	0,1,1
.L790:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_ranges'
.L226:
	.word	-1,.L160,0,.L227-.L160,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_info'
.L228:
	.word	240
	.half	3
	.word	.L229
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L231,.L230
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_BusOff_Deal',0,1,139,6,6,1,1,1
	.word	.L166,.L334,.L165
	.byte	4
	.word	.L166,.L334
	.byte	5
	.byte	'ui8_Node_Loop',0,1,141,6,8
	.word	.L300,.L335
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_line'
.L230:
	.word	.L808-.L807
.L807:
	.half	3
	.word	.L810-.L809
.L809:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L810:
	.byte	5,20,7,0,5,2
	.word	.L166
	.byte	3,142,6,1,5,5,3,9,1,5,6,9
	.half	.L811-.L166
	.byte	3,121,1,5,5,9
	.half	.L812-.L811
	.byte	3,5,1,5,54,9
	.half	.L813-.L812
	.byte	3,121,1,5,32,9
	.half	.L102-.L813
	.byte	3,2,1,5,3,9
	.half	.L814-.L102
	.byte	1,5,8,7,9
	.half	.L815-.L814
	.byte	3,2,1,5,4,9
	.half	.L816-.L815
	.byte	1,5,5,7,9
	.half	.L817-.L816
	.byte	3,2,1,5,32,9
	.half	.L818-.L817
	.byte	1,5,44,9
	.half	.L819-.L818
	.byte	3,1,1,5,42,1,5,50,9
	.half	.L820-.L819
	.byte	3,1,1,5,48,1,5,42,9
	.half	.L821-.L820
	.byte	3,1,1,5,23,9
	.half	.L104-.L821
	.byte	3,3,1,5,4,9
	.half	.L391-.L104
	.byte	1,5,29,7,9
	.half	.L822-.L391
	.byte	3,2,1,5,5,9
	.half	.L823-.L822
	.byte	1,5,42,7,9
	.half	.L824-.L823
	.byte	3,2,1,5,44,9
	.half	.L825-.L824
	.byte	1,5,23,9
	.half	.L106-.L825
	.byte	3,4,1,5,71,9
	.half	.L393-.L106
	.byte	3,1,1,5,43,9
	.half	.L107-.L393
	.byte	1,5,69,9
	.half	.L103-.L107
	.byte	3,107,1,5,54,9
	.half	.L826-.L103
	.byte	1,5,1,7,9
	.half	.L827-.L826
	.byte	3,26,1,7,9
	.half	.L232-.L827
	.byte	0,1,1
.L808:
	.sdecl	'.debug_ranges',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_ranges'
.L231:
	.word	-1,.L166,0,.L232-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_info'
.L233:
	.word	264
	.half	3
	.word	.L234
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L236,.L235
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_ubRequestMsgObj',0,1,213,7,7
	.word	.L300
	.byte	1,1,1
	.word	.L178,.L336,.L177
	.byte	4
	.byte	'ubObjNr',0,1,213,7,33
	.word	.L300,.L337
	.byte	5
	.word	.L178,.L336
	.byte	6
	.byte	'ubReturn',0,1,215,7,9
	.word	.L300,.L338
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_abbrev'
.L234:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_line'
.L235:
	.word	.L829-.L828
.L828:
	.half	3
	.word	.L831-.L830
.L830:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L831:
	.byte	5,17,7,0,5,2
	.word	.L178
	.byte	3,217,7,1,5,7,1,5,16,9
	.half	.L832-.L178
	.byte	1,5,12,9
	.half	.L833-.L832
	.byte	3,127,1,5,25,3,1,1,5,3,9
	.half	.L416-.L833
	.byte	1,5,34,7,9
	.half	.L834-.L416
	.byte	3,2,1,5,32,1,5,14,9
	.half	.L835-.L834
	.byte	3,1,1,5,1,9
	.half	.L137-.L835
	.byte	3,4,1,7,9
	.half	.L237-.L137
	.byte	0,1,1
.L829:
	.sdecl	'.debug_ranges',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_ranges'
.L236:
	.word	-1,.L178,0,.L237-.L178,0,0
	.sdecl	'.debug_info',debug,cluster('CANOBJ_Read')
	.sect	'.debug_info'
.L238:
	.word	308
	.half	3
	.word	.L239
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L241,.L240
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CANOBJ_Read',0,1,170,2,9
	.word	.L300
	.byte	1,1,1
	.word	.L144,.L339,.L143
	.byte	4
	.byte	'ui8_Obj',0,1,170,2,27
	.word	.L300,.L340
	.byte	4
	.byte	'TargetAddressPtr',0,1,170,2,43
	.word	.L304,.L341
	.byte	5
	.word	.L144,.L339
	.byte	6
	.byte	'ui8_Loop',0,1,172,2,8
	.word	.L300,.L342
	.byte	6
	.byte	'b_Return',0,1,173,2,10
	.word	.L300,.L343
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CANOBJ_Read')
	.sect	'.debug_abbrev'
.L239:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CANOBJ_Read')
	.sect	'.debug_line'
.L240:
	.word	.L837-.L836
.L836:
	.half	3
	.word	.L839-.L838
.L838:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L839:
	.byte	5,19,7,0,5,2
	.word	.L144
	.byte	3,175,2,1,5,6,1,5,19,9
	.half	.L840-.L144
	.byte	1,5,11,9
	.half	.L841-.L840
	.byte	3,127,1,5,28,3,1,1,5,5,9
	.half	.L371-.L841
	.byte	1,5,30,7,9
	.half	.L842-.L371
	.byte	3,1,1,5,37,9
	.half	.L843-.L842
	.byte	1,5,6,7,9
	.half	.L844-.L843
	.byte	3,2,1,5,25,9
	.half	.L845-.L844
	.byte	1,5,3,9
	.half	.L846-.L845
	.byte	1,5,32,7,9
	.half	.L847-.L846
	.byte	3,2,1,5,1,9
	.half	.L47-.L847
	.byte	3,17,1,5,18,7,9
	.half	.L49-.L47
	.byte	3,116,1,5,57,3,127,1,5,8,9
	.half	.L370-.L49
	.byte	3,1,1,5,17,9
	.half	.L848-.L370
	.byte	1,5,33,9
	.half	.L849-.L848
	.byte	3,127,1,5,26,9
	.half	.L850-.L849
	.byte	3,1,1,5,4,9
	.half	.L851-.L850
	.byte	1,5,57,7,9
	.half	.L852-.L851
	.byte	3,4,1,5,37,9
	.half	.L853-.L852
	.byte	3,126,1,5,64,9
	.half	.L52-.L853
	.byte	3,2,1,5,37,9
	.half	.L854-.L52
	.byte	1,9
	.half	.L855-.L854
	.byte	3,126,1,5,34,7,9
	.half	.L856-.L855
	.byte	3,4,1,5,32,1,5,14,9
	.half	.L857-.L856
	.byte	3,1,1,5,1,9
	.half	.L51-.L857
	.byte	3,5,1,7,9
	.half	.L242-.L51
	.byte	0,1,1
.L837:
	.sdecl	'.debug_ranges',debug,cluster('CANOBJ_Read')
	.sect	'.debug_ranges'
.L241:
	.word	-1,.L144,0,.L242-.L144,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Read_Error')
	.sect	'.debug_info'
.L243:
	.word	262
	.half	3
	.word	.L244
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L246,.L245
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Read_Error',0,1,172,4,6,1,1,1
	.word	.L158,.L344,.L157
	.byte	4
	.word	.L158,.L344
	.byte	5
	.byte	'ui32_Temp',0,1,174,4,9
	.word	.L302,.L345
	.byte	5
	.byte	'ui8_Node_Loop',0,1,175,4,8
	.word	.L300,.L346
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Read_Error')
	.sect	'.debug_abbrev'
.L244:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Read_Error')
	.sect	'.debug_line'
.L245:
	.word	.L859-.L858
.L858:
	.half	3
	.word	.L861-.L860
.L860:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L861:
	.byte	5,20,7,0,5,2
	.word	.L158
	.byte	3,176,4,1,5,6,3,9,1,9
	.half	.L862-.L158
	.byte	3,121,1,5,24,9
	.half	.L863-.L862
	.byte	3,126,1,5,54,1,5,32,9
	.half	.L72-.L863
	.byte	3,2,1,5,3,9
	.half	.L864-.L72
	.byte	1,5,16,7,9
	.half	.L865-.L864
	.byte	3,2,1,5,4,9
	.half	.L385-.L865
	.byte	3,1,1,5,5,7,9
	.half	.L866-.L385
	.byte	3,2,1,5,41,7,9
	.half	.L867-.L866
	.byte	3,2,1,5,5,9
	.half	.L75-.L867
	.byte	3,3,1,5,41,7,9
	.half	.L868-.L75
	.byte	3,2,1,5,5,9
	.half	.L76-.L868
	.byte	3,3,1,5,40,7,9
	.half	.L869-.L76
	.byte	3,2,1,5,6,9
	.half	.L870-.L869
	.byte	3,1,1,5,35,9
	.half	.L871-.L870
	.byte	1,5,33,1,5,5,9
	.half	.L77-.L871
	.byte	3,3,1,5,40,7,9
	.half	.L872-.L77
	.byte	3,2,1,5,6,9
	.half	.L873-.L872
	.byte	3,1,1,5,35,9
	.half	.L874-.L873
	.byte	1,5,33,1,5,9,9
	.half	.L78-.L874
	.byte	3,3,1,5,5,9
	.half	.L875-.L78
	.byte	1,5,41,7,9
	.half	.L876-.L875
	.byte	3,2,1,5,5,9
	.half	.L79-.L876
	.byte	3,3,1,5,34,9
	.half	.L877-.L79
	.byte	1,5,32,1,5,18,9
	.half	.L74-.L877
	.byte	3,3,1,5,4,9
	.half	.L878-.L74
	.byte	1,5,11,7,9
	.half	.L879-.L878
	.byte	3,4,1,7,9
	.half	.L880-.L879
	.byte	3,6,1,7,9
	.half	.L881-.L880
	.byte	3,6,1,7,9
	.half	.L882-.L881
	.byte	3,6,1,7,9
	.half	.L883-.L882
	.byte	3,6,1,7,9
	.half	.L884-.L883
	.byte	3,13,1,7,9
	.half	.L885-.L884
	.byte	1,5,43,9
	.half	.L81-.L885
	.byte	3,93,1,5,7,9
	.half	.L886-.L81
	.byte	3,1,1,5,42,9
	.half	.L82-.L886
	.byte	3,5,1,5,7,9
	.half	.L887-.L82
	.byte	3,1,1,5,41,9
	.half	.L83-.L887
	.byte	3,5,1,5,7,9
	.half	.L888-.L83
	.byte	3,1,1,5,42,9
	.half	.L84-.L888
	.byte	3,5,1,5,7,9
	.half	.L889-.L84
	.byte	3,1,1,9
	.half	.L85-.L889
	.byte	3,5,1,5,48,7,9
	.half	.L890-.L85
	.byte	3,2,1,5,54,9
	.half	.L891-.L890
	.byte	1,5,49,9
	.half	.L92-.L891
	.byte	3,4,1,5,7,9
	.half	.L892-.L92
	.byte	3,2,1,5,41,9
	.half	.L86-.L892
	.byte	3,5,1,5,5,9
	.half	.L87-.L86
	.byte	3,9,1,5,34,9
	.half	.L893-.L87
	.byte	1,5,32,1,5,22,9
	.half	.L73-.L893
	.byte	3,3,1,5,69,9
	.half	.L387-.L73
	.byte	3,164,127,1,5,54,9
	.half	.L894-.L387
	.byte	1,5,1,7,9
	.half	.L895-.L894
	.byte	3,222,0,1,7,9
	.half	.L247-.L895
	.byte	0,1,1
.L859:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Read_Error')
	.sect	'.debug_ranges'
.L246:
	.word	-1,.L158,0,.L247-.L158,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_info'
.L248:
	.word	261
	.half	3
	.word	.L249
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L251,.L250
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Read_BusOff',0,1,196,5,9
	.word	.L300
	.byte	1,1,1
	.word	.L162,.L347,.L161
	.byte	4
	.byte	'ui8_Node',0,1,196,5,31
	.word	.L300,.L348
	.byte	5
	.word	.L162,.L347
	.byte	6
	.byte	'b_Return',0,1,198,5,10
	.word	.L300,.L349
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_abbrev'
.L249:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_line'
.L250:
	.word	.L897-.L896
.L896:
	.half	3
	.word	.L899-.L898
.L898:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L899:
	.byte	5,17,7,0,5,2
	.word	.L162
	.byte	3,200,5,1,5,5,1,5,17,9
	.half	.L900-.L162
	.byte	1,5,11,9
	.half	.L901-.L900
	.byte	3,127,1,5,27,3,1,1,5,2,9
	.half	.L388-.L901
	.byte	1,5,12,9
	.half	.L902-.L388
	.byte	3,2,1,5,1,9
	.half	.L903-.L902
	.byte	3,3,1,7,9
	.half	.L252-.L903
	.byte	0,1,1
.L897:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_ranges'
.L251:
	.word	-1,.L162,0,.L252-.L162,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_info'
.L253:
	.word	235
	.half	3
	.word	.L254
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L256,.L255
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_BusOff_Clear',0,1,218,5,6,1,1,1
	.word	.L164,.L350,.L163
	.byte	4
	.byte	'ui8_Node',0,1,218,5,29
	.word	.L300,.L351
	.byte	5
	.word	.L164,.L350
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_abbrev'
.L254:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_line'
.L255:
	.word	.L905-.L904
.L904:
	.half	3
	.word	.L907-.L906
.L906:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L907:
	.byte	5,2,7,0,5,2
	.word	.L164
	.byte	3,219,5,1,5,23,9
	.half	.L908-.L164
	.byte	1,5,33,9
	.half	.L909-.L908
	.byte	1,5,2,9
	.half	.L910-.L909
	.byte	3,1,1,5,14,7,9
	.half	.L911-.L910
	.byte	3,2,1,5,3,1,5,14,9
	.half	.L912-.L911
	.byte	1,5,43,9
	.half	.L913-.L912
	.byte	1,5,41,1,5,2,9
	.half	.L98-.L913
	.byte	3,3,1,5,27,9
	.half	.L914-.L98
	.byte	1,5,2,1,5,24,9
	.half	.L915-.L914
	.byte	1,5,14,9
	.half	.L916-.L915
	.byte	3,1,1,5,2,1,5,14,9
	.half	.L917-.L916
	.byte	1,5,34,9
	.half	.L918-.L917
	.byte	1,5,32,1,5,2,9
	.half	.L919-.L918
	.byte	3,3,1,5,7,7,9
	.half	.L920-.L919
	.byte	3,4,1,7,9
	.half	.L921-.L920
	.byte	3,4,1,5,8,7,9
	.half	.L922-.L921
	.byte	3,6,1,5,1,9
	.half	.L99-.L922
	.byte	3,3,1,7,9
	.half	.L257-.L99
	.byte	0,1,1
.L905:
	.sdecl	'.debug_ranges',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_ranges'
.L256:
	.word	-1,.L164,0,.L257-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_info'
.L258:
	.word	305
	.half	3
	.word	.L259
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L261,.L260
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Rx_Interrupt',0,1,181,6,6,1,1,1
	.word	.L168,.L352,.L167
	.byte	4
	.byte	'ui8_Obj',0,1,181,6,29
	.word	.L300,.L353
	.byte	5
	.word	.L168,.L352
	.byte	6
	.byte	'ui16_Loop_1',0,1,183,6,9
	.word	.L306,.L354
	.byte	6
	.byte	'ui8_Loop_2',0,1,184,6,8
	.word	.L300,.L355
	.byte	6
	.byte	'ui32_ID',0,1,185,6,9
	.word	.L302,.L356
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_abbrev'
.L259:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_line'
.L260:
	.word	.L924-.L923
.L923:
	.half	3
	.word	.L926-.L925
.L925:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L926:
	.byte	5,15,7,0,5,2
	.word	.L168
	.byte	3,187,6,1,5,5,1,5,14,9
	.half	.L927-.L168
	.byte	1,5,23,9
	.half	.L928-.L927
	.byte	1,5,2,9
	.half	.L929-.L928
	.byte	1,5,24,7,9
	.half	.L930-.L929
	.byte	3,2,1,5,3,9
	.half	.L931-.L930
	.byte	1,5,26,7,9
	.half	.L932-.L931
	.byte	3,2,1,5,4,9
	.half	.L933-.L932
	.byte	1,5,34,7,9
	.half	.L934-.L933
	.byte	3,2,1,5,32,1,5,20,9
	.half	.L110-.L934
	.byte	3,3,1,5,7,1,5,20,9
	.half	.L935-.L110
	.byte	1,5,39,9
	.half	.L936-.L935
	.byte	1,5,29,1,5,4,9
	.half	.L937-.L936
	.byte	1,5,34,7,9
	.half	.L938-.L937
	.byte	3,2,1,5,50,9
	.half	.L939-.L938
	.byte	1,5,58,9
	.half	.L395-.L939
	.byte	1,5,9,9
	.half	.L111-.L395
	.byte	3,2,1,5,33,7,9
	.half	.L940-.L111
	.byte	3,2,1,5,41,9
	.half	.L941-.L940
	.byte	1,5,54,9
	.half	.L396-.L941
	.byte	1,5,13,9
	.half	.L113-.L396
	.byte	3,4,1,5,10,9
	.half	.L397-.L113
	.byte	3,1,1,5,8,9
	.half	.L112-.L397
	.byte	3,7,1,5,85,9
	.half	.L942-.L112
	.byte	3,6,1,5,78,9
	.half	.L943-.L942
	.byte	1,5,60,9
	.half	.L944-.L943
	.byte	3,120,1,5,36,9
	.half	.L115-.L944
	.byte	3,2,1,5,5,9
	.half	.L945-.L115
	.byte	1,5,48,7,9
	.half	.L946-.L945
	.byte	3,2,1,5,6,9
	.half	.L947-.L946
	.byte	1,5,36,7,9
	.half	.L948-.L947
	.byte	3,4,1,5,43,9
	.half	.L949-.L948
	.byte	3,126,1,5,85,9
	.half	.L118-.L949
	.byte	3,2,1,5,58,9
	.half	.L950-.L118
	.byte	1,5,43,9
	.half	.L951-.L950
	.byte	3,126,1,5,44,7,9
	.half	.L952-.L951
	.byte	3,4,1,5,7,9
	.half	.L953-.L952
	.byte	3,2,1,5,73,9
	.half	.L116-.L953
	.byte	3,116,1,5,60,9
	.half	.L954-.L116
	.byte	1,5,30,7,9
	.half	.L119-.L954
	.byte	3,21,1,5,33,9
	.half	.L394-.L119
	.byte	3,1,1,5,31,1,5,32,9
	.half	.L109-.L394
	.byte	3,2,1,5,30,1,5,1,9
	.half	.L108-.L109
	.byte	3,2,1,7,9
	.half	.L262-.L108
	.byte	0,1,1
.L924:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_ranges'
.L261:
	.word	-1,.L168,0,.L262-.L168,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_info'
.L263:
	.word	234
	.half	3
	.word	.L264
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L266,.L265
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_Tx_Interrupt',0,1,251,6,6,1,1,1
	.word	.L170,.L357,.L169
	.byte	4
	.byte	'ui8_Obj',0,1,251,6,29
	.word	.L300,.L358
	.byte	5
	.word	.L170,.L357
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_abbrev'
.L264:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_line'
.L265:
	.word	.L956-.L955
.L955:
	.half	3
	.word	.L958-.L957
.L957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L958:
	.byte	5,15,7,0,5,2
	.word	.L170
	.byte	3,252,6,1,5,5,1,5,14,9
	.half	.L959-.L170
	.byte	1,5,23,9
	.half	.L960-.L959
	.byte	1,5,2,9
	.half	.L961-.L960
	.byte	1,5,29,7,9
	.half	.L962-.L961
	.byte	3,2,1,5,32,9
	.half	.L398-.L962
	.byte	3,1,1,5,30,1,5,32,9
	.half	.L963-.L398
	.byte	3,1,1,5,30,1,5,1,9
	.half	.L120-.L963
	.byte	3,2,1,7,9
	.half	.L267-.L120
	.byte	0,1,1
.L956:
	.sdecl	'.debug_ranges',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_ranges'
.L266:
	.word	-1,.L170,0,.L267-.L170,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_viSRN0')
	.sect	'.debug_info'
.L268:
	.word	229
	.half	3
	.word	.L269
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L271,.L270
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_viSRN0',0,1,133,7,30,1,1,1
	.word	.L172,.L359,.L171
	.byte	4
	.word	.L172,.L359
	.byte	5
	.byte	'ui8_Obj',0,1,135,7,8
	.word	.L300,.L360
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_viSRN0')
	.sect	'.debug_abbrev'
.L269:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_viSRN0')
	.sect	'.debug_line'
.L270:
	.word	.L965-.L964
.L964:
	.half	3
	.word	.L967-.L966
.L966:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L967:
	.byte	5,30,7,0,5,2
	.word	.L172
	.byte	3,132,7,1,5,16,9
	.half	.L968-.L172
	.byte	3,4,1,5,2,9
	.half	.L969-.L968
	.byte	1,5,34,9
	.half	.L970-.L969
	.byte	1,5,14,9
	.half	.L971-.L970
	.byte	1,5,9,9
	.half	.L972-.L971
	.byte	3,1,1,5,14,9
	.half	.L973-.L972
	.byte	3,4,1,5,32,9
	.half	.L974-.L973
	.byte	3,124,1,5,25,9
	.half	.L122-.L974
	.byte	3,2,1,5,23,9
	.half	.L975-.L122
	.byte	1,5,20,9
	.half	.L399-.L975
	.byte	3,1,1,5,19,9
	.half	.L400-.L399
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L976-.L400
	.byte	1,5,17,9
	.half	.L977-.L976
	.byte	1,5,14,9
	.half	.L978-.L977
	.byte	1,5,22,9
	.half	.L121-.L978
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L979-.L121
	.byte	1,5,34,7,9
	.half	.L980-.L979
	.byte	3,7,1,5,14,9
	.half	.L981-.L980
	.byte	1,5,9,9
	.half	.L982-.L981
	.byte	3,1,1,5,14,9
	.half	.L983-.L982
	.byte	3,4,1,5,32,9
	.half	.L984-.L983
	.byte	3,124,1,5,25,9
	.half	.L124-.L984
	.byte	3,2,1,5,23,9
	.half	.L985-.L124
	.byte	1,5,20,9
	.half	.L401-.L985
	.byte	3,1,1,5,19,9
	.half	.L402-.L401
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L986-.L402
	.byte	1,5,17,9
	.half	.L987-.L986
	.byte	1,5,14,9
	.half	.L988-.L987
	.byte	1,5,22,9
	.half	.L123-.L988
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L989-.L123
	.byte	1,5,34,7,9
	.half	.L990-.L989
	.byte	3,7,1,5,14,9
	.half	.L991-.L990
	.byte	1,5,9,9
	.half	.L992-.L991
	.byte	3,1,1,5,14,9
	.half	.L993-.L992
	.byte	3,4,1,5,32,9
	.half	.L994-.L993
	.byte	3,124,1,5,25,9
	.half	.L126-.L994
	.byte	3,2,1,5,23,9
	.half	.L995-.L126
	.byte	1,5,20,9
	.half	.L403-.L995
	.byte	3,1,1,5,19,9
	.half	.L404-.L403
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L996-.L404
	.byte	1,5,17,9
	.half	.L997-.L996
	.byte	1,5,14,9
	.half	.L998-.L997
	.byte	1,5,22,9
	.half	.L125-.L998
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L999-.L125
	.byte	1,5,34,7,9
	.half	.L1000-.L999
	.byte	3,7,1,5,14,9
	.half	.L1001-.L1000
	.byte	1,5,9,9
	.half	.L1002-.L1001
	.byte	3,1,1,5,14,9
	.half	.L1003-.L1002
	.byte	3,4,1,5,32,9
	.half	.L1004-.L1003
	.byte	3,124,1,5,25,9
	.half	.L128-.L1004
	.byte	3,2,1,5,23,9
	.half	.L1005-.L128
	.byte	1,5,20,9
	.half	.L405-.L1005
	.byte	3,1,1,5,19,9
	.half	.L406-.L405
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L1006-.L406
	.byte	1,5,17,9
	.half	.L1007-.L1006
	.byte	1,5,14,9
	.half	.L1008-.L1007
	.byte	1,5,22,9
	.half	.L127-.L1008
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L1009-.L127
	.byte	1,5,1,7,9
	.half	.L1010-.L1009
	.byte	3,6,1,9
	.half	.L272-.L1010
	.byte	0,1,1
.L965:
	.sdecl	'.debug_ranges',debug,cluster('CAN_viSRN0')
	.sect	'.debug_ranges'
.L271:
	.word	-1,.L172,0,.L272-.L172,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_viSRN1')
	.sect	'.debug_info'
.L273:
	.word	229
	.half	3
	.word	.L274
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L276,.L275
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_viSRN1',0,1,170,7,30,1,1,1
	.word	.L174,.L361,.L173
	.byte	4
	.word	.L174,.L361
	.byte	5
	.byte	'ui8_Obj',0,1,172,7,8
	.word	.L300,.L362
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_viSRN1')
	.sect	'.debug_abbrev'
.L274:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_viSRN1')
	.sect	'.debug_line'
.L275:
	.word	.L1012-.L1011
.L1011:
	.half	3
	.word	.L1014-.L1013
.L1013:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L1014:
	.byte	5,30,7,0,5,2
	.word	.L174
	.byte	3,169,7,1,5,16,9
	.half	.L1015-.L174
	.byte	3,4,1,5,2,9
	.half	.L1016-.L1015
	.byte	1,5,34,9
	.half	.L1017-.L1016
	.byte	1,5,14,9
	.half	.L1018-.L1017
	.byte	1,5,9,9
	.half	.L1019-.L1018
	.byte	3,1,1,5,14,9
	.half	.L1020-.L1019
	.byte	3,4,1,5,32,9
	.half	.L1021-.L1020
	.byte	3,124,1,5,25,9
	.half	.L130-.L1021
	.byte	3,2,1,5,23,9
	.half	.L1022-.L130
	.byte	1,5,20,9
	.half	.L407-.L1022
	.byte	3,1,1,5,19,9
	.half	.L408-.L407
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L1023-.L408
	.byte	1,5,17,9
	.half	.L1024-.L1023
	.byte	1,5,14,9
	.half	.L1025-.L1024
	.byte	1,5,22,9
	.half	.L129-.L1025
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L1026-.L129
	.byte	1,5,34,7,9
	.half	.L1027-.L1026
	.byte	3,7,1,5,14,9
	.half	.L1028-.L1027
	.byte	1,5,9,9
	.half	.L1029-.L1028
	.byte	3,1,1,5,14,9
	.half	.L1030-.L1029
	.byte	3,4,1,5,32,9
	.half	.L1031-.L1030
	.byte	3,124,1,5,25,9
	.half	.L132-.L1031
	.byte	3,2,1,5,23,9
	.half	.L1032-.L132
	.byte	1,5,20,9
	.half	.L409-.L1032
	.byte	3,1,1,5,19,9
	.half	.L410-.L409
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L1033-.L410
	.byte	1,5,17,9
	.half	.L1034-.L1033
	.byte	1,5,14,9
	.half	.L1035-.L1034
	.byte	1,5,22,9
	.half	.L131-.L1035
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L1036-.L131
	.byte	1,5,34,7,9
	.half	.L1037-.L1036
	.byte	3,7,1,5,14,9
	.half	.L1038-.L1037
	.byte	1,5,9,9
	.half	.L1039-.L1038
	.byte	3,1,1,5,14,9
	.half	.L1040-.L1039
	.byte	3,4,1,5,32,9
	.half	.L1041-.L1040
	.byte	3,124,1,5,25,9
	.half	.L134-.L1041
	.byte	3,2,1,5,23,9
	.half	.L1042-.L134
	.byte	1,5,20,9
	.half	.L411-.L1042
	.byte	3,1,1,5,19,9
	.half	.L412-.L411
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L1043-.L412
	.byte	1,5,17,9
	.half	.L1044-.L1043
	.byte	1,5,14,9
	.half	.L1045-.L1044
	.byte	1,5,22,9
	.half	.L133-.L1045
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L1046-.L133
	.byte	1,5,34,7,9
	.half	.L1047-.L1046
	.byte	3,7,1,5,14,9
	.half	.L1048-.L1047
	.byte	1,5,9,9
	.half	.L1049-.L1048
	.byte	3,1,1,5,14,9
	.half	.L1050-.L1049
	.byte	3,4,1,5,32,9
	.half	.L1051-.L1050
	.byte	3,124,1,5,25,9
	.half	.L136-.L1051
	.byte	3,2,1,5,23,9
	.half	.L1052-.L136
	.byte	1,5,20,9
	.half	.L413-.L1052
	.byte	3,1,1,5,19,9
	.half	.L414-.L413
	.byte	3,1,1,5,24,1,5,21,9
	.half	.L1053-.L414
	.byte	1,5,17,9
	.half	.L1054-.L1053
	.byte	1,5,14,9
	.half	.L1055-.L1054
	.byte	1,5,22,9
	.half	.L135-.L1055
	.byte	3,124,1,5,9,1,5,32,9
	.half	.L1056-.L135
	.byte	1,5,1,7,9
	.half	.L1057-.L1056
	.byte	3,6,1,9
	.half	.L277-.L1057
	.byte	0,1,1
.L1012:
	.sdecl	'.debug_ranges',debug,cluster('CAN_viSRN1')
	.sect	'.debug_ranges'
.L276:
	.word	-1,.L174,0,.L277-.L174,0,0
	.sdecl	'.debug_info',debug,cluster('CAN_viSRN2')
	.sect	'.debug_info'
.L278:
	.word	207
	.half	3
	.word	.L279
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1
	.word	.L281,.L280
	.byte	2
	.word	.L179
	.byte	3
	.byte	'CAN_viSRN2',0,1,207,7,30,1,1,1
	.word	.L176,.L363,.L175
	.byte	4
	.word	.L176,.L363
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('CAN_viSRN2')
	.sect	'.debug_abbrev'
.L279:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('CAN_viSRN2')
	.sect	'.debug_line'
.L280:
	.word	.L1059-.L1058
.L1058:
	.half	3
	.word	.L1061-.L1060
.L1060:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0,0,0,0,0
.L1061:
	.byte	5,30,7,0,5,2
	.word	.L176
	.byte	3,206,7,1,5,16,9
	.half	.L1062-.L176
	.byte	3,2,1,5,19,9
	.half	.L1063-.L1062
	.byte	3,1,1,5,1,9
	.half	.L1064-.L1063
	.byte	3,1,1,9
	.half	.L282-.L1064
	.byte	0,1,1
.L1059:
	.sdecl	'.debug_ranges',debug,cluster('CAN_viSRN2')
	.sect	'.debug_ranges'
.L281:
	.word	-1,.L176,0,.L282-.L176,0,0
	.sdecl	'.debug_info',debug,cluster('st_CAN_Error')
	.sect	'.debug_info'
.L283:
	.word	186
	.half	3
	.word	.L284
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1,2
	.word	.L179
	.byte	3
	.byte	'st_CAN_Error',0,3,40,18
	.word	.L364
	.byte	1,5,3
	.word	st_CAN_Error
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('st_CAN_Error')
	.sect	'.debug_abbrev'
.L284:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('ui32_BOFF_Delay_Count')
	.sect	'.debug_info'
.L285:
	.word	195
	.half	3
	.word	.L286
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1,2
	.word	.L179
	.byte	3
	.byte	'ui32_BOFF_Delay_Count',0,3,42,8
	.word	.L365
	.byte	1,5,3
	.word	ui32_BOFF_Delay_Count
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ui32_BOFF_Delay_Count')
	.sect	'.debug_abbrev'
.L286:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('ui32_BOFF_Clear_Count')
	.sect	'.debug_info'
.L287:
	.word	195
	.half	3
	.word	.L288
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1,2
	.word	.L179
	.byte	3
	.byte	'ui32_BOFF_Clear_Count',0,3,43,8
	.word	.L365
	.byte	1,5,3
	.word	ui32_BOFF_Clear_Count
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ui32_BOFF_Clear_Count')
	.sect	'.debug_abbrev'
.L288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('ui8_CallCycle_Count')
	.sect	'.debug_info'
.L289:
	.word	193
	.half	3
	.word	.L290
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1,2
	.word	.L179
	.byte	3
	.byte	'ui8_CallCycle_Count',0,3,44,7
	.word	.L366
	.byte	1,5,3
	.word	ui8_CallCycle_Count
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ui8_CallCycle_Count')
	.sect	'.debug_abbrev'
.L290:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('ui32_MSIMASK_Value')
	.sect	'.debug_info'
.L291:
	.word	192
	.half	3
	.word	.L292
	.byte	4,1
	.byte	'..\\Communication_Files\\CanDrv\\CanDrv_TC1782.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\work\\Microvast\\OTA\\LiFan\\BMU_BOOT\\BMU_BOOT\\Debug\\',0,12,1,2
	.word	.L179
	.byte	3
	.byte	'ui32_MSIMASK_Value',0,3,46,8
	.word	.L367
	.byte	1,5,3
	.word	ui32_MSIMASK_Value
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ui32_MSIMASK_Value')
	.sect	'.debug_abbrev'
.L292:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_loc',debug,cluster('CANOBJ_Read')
	.sect	'.debug_loc'
.L143:
	.word	-1,.L144,0,.L339-.L144
	.half	2
	.byte	138,0
	.word	0,0
.L341:
	.word	-1,.L144,0,.L339-.L144
	.half	1
	.byte	100
	.word	0,0
.L343:
	.word	-1,.L144,.L371-.L144,.L339-.L144
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L342:
	.word	0,0
.L340:
	.word	-1,.L144,0,.L370-.L144
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_loc'
.L163:
	.word	-1,.L164,0,.L350-.L164
	.half	2
	.byte	138,0
	.word	0,0
.L351:
	.word	-1,.L164,0,.L350-.L164
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_loc'
.L165:
	.word	-1,.L166,0,.L334-.L166
	.half	2
	.byte	138,0
	.word	0,0
.L335:
	.word	-1,.L166,.L389-.L166,.L334-.L166
	.half	5
	.byte	144,36,157,32,0
	.word	.L390-.L166,.L391-.L166
	.half	5
	.byte	144,34,157,32,0
	.word	.L392-.L166,.L393-.L166
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_loc'
.L159:
	.word	-1,.L160,0,.L332-.L160
	.half	2
	.byte	138,0
	.word	0,0
.L333:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Init')
	.sect	'.debug_loc'
.L139:
	.word	-1,.L140,0,.L368-.L140
	.half	2
	.byte	138,0
	.word	.L368-.L140,.L293-.L140
	.half	2
	.byte	138,8
	.word	.L293-.L140,.L293-.L140
	.half	2
	.byte	138,0
	.word	0,0
.L295:
	.word	-1,.L140,0,.L293-.L140
	.half	2
	.byte	145,120
	.word	0,0
.L299:
	.word	-1,.L140,0,.L293-.L140
	.half	2
	.byte	145,125
	.word	0,0
.L297:
	.word	-1,.L140,0,.L293-.L140
	.half	2
	.byte	145,124
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_loc'
.L153:
	.word	-1,.L154,0,.L326-.L154
	.half	2
	.byte	138,0
	.word	0,0
.L328:
	.word	-1,.L154,.L381-.L154,.L326-.L154
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L327:
	.word	-1,.L154,0,.L380-.L154
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_loc'
.L149:
	.word	-1,.L150,0,.L321-.L150
	.half	2
	.byte	138,0
	.word	0,0
.L322:
	.word	-1,.L150,0,.L377-.L150
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_loc'
.L151:
	.word	-1,.L152,0,.L323-.L152
	.half	2
	.byte	138,0
	.word	0,0
.L325:
	.word	-1,.L152,.L379-.L152,.L323-.L152
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L324:
	.word	-1,.L152,0,.L378-.L152
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Read')
	.sect	'.debug_loc'
.L145:
	.word	-1,.L146,0,.L310-.L146
	.half	2
	.byte	138,0
	.word	0,0
.L314:
	.word	-1,.L146,0,.L310-.L146
	.half	1
	.byte	101
	.word	.L372-.L146,.L310-.L146
	.half	1
	.byte	100
	.word	0,0
.L315:
	.word	0,0
.L313:
	.word	-1,.L146,0,.L372-.L146
	.half	1
	.byte	100
	.word	0,0
.L311:
	.word	-1,.L146,0,.L310-.L146
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_loc'
.L161:
	.word	-1,.L162,0,.L347-.L162
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L162,.L388-.L162,.L347-.L162
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L348:
	.word	-1,.L162,0,.L347-.L162
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_loc'
.L141:
	.word	-1,.L142,0,.L301-.L142
	.half	2
	.byte	138,0
	.word	0,0
.L305:
	.word	-1,.L142,0,.L301-.L142
	.half	1
	.byte	100
	.word	0,0
.L309:
	.word	-1,.L142,.L369-.L142,.L301-.L142
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L307:
	.word	0,0
.L303:
	.word	-1,.L142,0,.L301-.L142
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L308:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Read_Error')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L158,0,.L344-.L158
	.half	2
	.byte	138,0
	.word	0,0
.L345:
	.word	-1,.L158,.L385-.L158,.L73-.L158
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L346:
	.word	-1,.L158,.L384-.L158,.L344-.L158
	.half	5
	.byte	144,36,157,32,0
	.word	.L386-.L158,.L387-.L158
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_loc'
.L167:
	.word	-1,.L168,0,.L352-.L168
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	0,0
.L356:
	.word	-1,.L168,.L395-.L168,.L111-.L168
	.half	5
	.byte	144,32,157,32,32
	.word	.L396-.L168,.L113-.L168
	.half	5
	.byte	144,32,157,32,32
	.word	.L397-.L168,.L394-.L168
	.half	5
	.byte	144,32,157,32,32
	.word	0,0
.L355:
	.word	0,0
.L353:
	.word	-1,.L168,0,.L394-.L168
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Set_ID')
	.sect	'.debug_loc'
.L155:
	.word	-1,.L156,0,.L329-.L156
	.half	2
	.byte	138,0
	.word	0,0
.L331:
	.word	-1,.L156,0,.L71-.L156
	.half	5
	.byte	144,34,157,32,32
	.word	0,0
.L330:
	.word	-1,.L156,0,.L382-.L156
	.half	5
	.byte	144,34,157,32,0
	.word	.L69-.L156,.L383-.L156
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_loc'
.L169:
	.word	-1,.L170,0,.L357-.L170
	.half	2
	.byte	138,0
	.word	0,0
.L358:
	.word	-1,.L170,0,.L398-.L170
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_Write')
	.sect	'.debug_loc'
.L147:
	.word	-1,.L148,0,.L316-.L148
	.half	2
	.byte	138,0
	.word	0,0
.L318:
	.word	-1,.L148,0,.L373-.L148
	.half	1
	.byte	100
	.word	.L375-.L148,.L376-.L148
	.half	1
	.byte	111
	.word	0,0
.L320:
	.word	-1,.L148,.L374-.L148,.L316-.L148
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
.L319:
	.word	0,0
.L317:
	.word	-1,.L148,0,.L373-.L148
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_loc'
.L177:
	.word	-1,.L178,0,.L336-.L178
	.half	2
	.byte	138,0
	.word	0,0
.L337:
	.word	-1,.L178,0,.L415-.L178
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
.L338:
	.word	-1,.L178,.L416-.L178,.L336-.L178
	.half	5
	.byte	144,33,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_viSRN0')
	.sect	'.debug_loc'
.L171:
	.word	-1,.L172,0,.L359-.L172
	.half	2
	.byte	138,0
	.word	0,0
.L360:
	.word	-1,.L172,.L399-.L172,.L400-.L172
	.half	5
	.byte	144,34,157,32,0
	.word	.L401-.L172,.L402-.L172
	.half	5
	.byte	144,34,157,32,0
	.word	.L403-.L172,.L404-.L172
	.half	5
	.byte	144,34,157,32,0
	.word	.L405-.L172,.L406-.L172
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_viSRN1')
	.sect	'.debug_loc'
.L173:
	.word	-1,.L174,0,.L361-.L174
	.half	2
	.byte	138,0
	.word	0,0
.L362:
	.word	-1,.L174,.L407-.L174,.L408-.L174
	.half	5
	.byte	144,34,157,32,0
	.word	.L409-.L174,.L410-.L174
	.half	5
	.byte	144,34,157,32,0
	.word	.L411-.L174,.L412-.L174
	.half	5
	.byte	144,34,157,32,0
	.word	.L413-.L174,.L414-.L174
	.half	5
	.byte	144,34,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('CAN_viSRN2')
	.sect	'.debug_loc'
.L175:
	.word	-1,.L176,0,.L363-.L176
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1065:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,26,8,27,8,30,8,29,8,28,8,16,8,17,8,24,8,25,8,31,8,32,8,33,8,34,8,35,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('CAN_Init')
	.sect	'.debug_frame'
	.word	36
	.word	.L1065,.L140,.L293-.L140
	.byte	4
	.word	(.L368-.L140)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L293-.L368)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('CAN_Read_By_ID')
	.sect	'.debug_frame'
	.word	16
	.word	.L1065,.L142,.L301-.L142
	.byte	8,19,0,0
	.sdecl	'.debug_frame',debug,cluster('CANOBJ_Read')
	.sect	'.debug_frame'
	.word	20
	.word	.L1065,.L144,.L339-.L144
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('CAN_Read')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L146,.L310-.L146
	.sdecl	'.debug_frame',debug,cluster('CAN_Write')
	.sect	'.debug_frame'
	.word	16
	.word	.L1065,.L148,.L316-.L148
	.byte	8,19,0,0
	.sdecl	'.debug_frame',debug,cluster('CAN_MOs_TXPND_Reset')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L150,.L321-.L150
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_MOs_Transmit_Status')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L152,.L323-.L152
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_MOs_Get_DLC')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L154,.L326-.L154
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_Set_ID')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L156,.L329-.L156
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_Read_Error')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L158,.L344-.L158
	.sdecl	'.debug_frame',debug,cluster('CAN_Error_Clear')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L160,.L332-.L160
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('CAN_Read_BusOff')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L162,.L347-.L162
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_BusOff_Clear')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L164,.L350-.L164
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('CAN_BusOff_Deal')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L166,.L334-.L166
	.sdecl	'.debug_frame',debug,cluster('CAN_Rx_Interrupt')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L168,.L352-.L168
	.sdecl	'.debug_frame',debug,cluster('CAN_Tx_Interrupt')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L170,.L357-.L170
	.sdecl	'.debug_frame',debug,cluster('CAN_viSRN0')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L172,.L359-.L172
	.sdecl	'.debug_frame',debug,cluster('CAN_viSRN1')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L174,.L361-.L174
	.sdecl	'.debug_frame',debug,cluster('CAN_viSRN2')
	.sect	'.debug_frame'
	.word	12
	.word	.L1065,.L176,.L363-.L176
	.sdecl	'.debug_frame',debug,cluster('CAN_ubRequestMsgObj')
	.sect	'.debug_frame'
	.word	24
	.word	.L1065,.L178,.L336-.L178
	.byte	8,18,8,19,8,20,8,21,8,22,8,23


	; Module end
